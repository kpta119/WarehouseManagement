// \App.jsximport{Provider}from"react-redux";importstorefrom"./app/store";importAppRouterfrom"./routes/AppRouter";import"./assets/styles/global.css";constApp=()=>(<Providerstore={store}><AppRouter/></Provider>);exportdefaultApp;// \index.jsximport{StrictMode}from"react";import{createRoot}from"react-dom/client";import"./assets/styles/global.css";importAppfrom"./App.jsx";createRoot(document.getElementById("root")).render(<StrictMode><App/></StrictMode>);// \api\categories.jsximportapiClientfrom"../utils/apiClient";exportconstlistCategories=()=>apiClient.get("/api/categories");exportconstcreateCategory=(data)=>apiClient.post("/api/categories",data);exportconstupdateCategory=(categoryId,data)=>apiClient.put(`/api/categories/${categoryId}`,data);exportconstdeleteCategory=(categoryId)=>apiClient.delete(`/api/categories/${categoryId}`);// \api\clients.jsximportapiClientfrom"../utils/apiClient";exportconstlistClients=(params)=>apiClient.get("/api/clients",{params});exportconstgetClientById=(clientId)=>apiClient.get(`/api/clients/${clientId}`);exportconstcreateClient=(data)=>apiClient.post("/api/clients",data);// \api\dashboard.jsximportapiClientfrom"../utils/apiClient";exportconstgetDashboardSummary=(warehouseId)=>apiClient.get("/api/dashboard/summary",{params:{warehouseId}});// \api\employees.jsximportapiClientfrom"../utils/apiClient";exportconstlistEmployees=(params)=>apiClient.get("/api/employees",{params});exportconstgetEmployeeById=(employeeId)=>apiClient.get(`/api/employees/${employeeId}`);exportconstcreateEmployee=(data)=>apiClient.post("/api/employees",data);// \api\geography.jsximportapiClientfrom"../utils/apiClient";exportconstlistRegions=()=>apiClient.get("/api/regions");exportconstlistCountries=(regionId)=>apiClient.get("/api/countries",{params:{regionId}});exportconstcreateAddress=(data)=>apiClient.post("/api/addresses",data);// \api\inventory.jsximportapiClientfrom"../utils/apiClient";exportconstreceiveFromSupplier=(data)=>apiClient.post("/api/inventory/receive",data);exportconsttransferBetweenWarehouses=(data)=>apiClient.post("/api/inventory/transfer",data);exportconstdeliverToClient=(data)=>apiClient.post("/api/inventory/delivery",data);// \api\products.jsximportapiClientfrom"../utils/apiClient";exportconstsearchProducts=(params)=>apiClient.get("/api/products/search",{params});exportconstgetProductById=(productId)=>apiClient.get(`/api/products/${productId}`);exportconstgetLowStockProducts=(warehouseId)=>apiClient.get("/api/products/low-stock",{params:{warehouseId}});exportconstgetBestSelling=({warehouseId,period})=>apiClient.get("/api/products/best-selling",{params:{warehouseId,period},});exportconstcreateProduct=(data)=>apiClient.post("/api/products",data);exportconstupdateProduct=(productId,data)=>apiClient.put(`/api/products/${productId}`,data);exportconstdeleteProduct=(productId)=>apiClient.delete(`/api/products/${productId}`);// \api\suppliers.jsximportapiClientfrom"../utils/apiClient";exportconstlistSuppliers=()=>apiClient.get("/api/suppliers");exportconstgetSupplierById=(supplierId)=>apiClient.get(`/api/suppliers/${supplierId}`);exportconstcreateSupplier=(data)=>apiClient.post("/api/suppliers",data);// \api\transactions.jsximportapiClientfrom"../utils/apiClient";exportconstlistTransactions=(params)=>apiClient.get("/api/transactions",{params});exportconstgetTransactionById=(transactionId)=>apiClient.get(`/api/transactions/${transactionId}`);// \api\warehouses.jsximportapiClientfrom"../utils/apiClient";exportconstlistWarehouses=()=>apiClient.get("/api/warehouses");exportconstgetWarehouseById=(warehouseId)=>apiClient.get(`/api/warehouses/${warehouseId}`);exportconstcreateWarehouse=(data)=>apiClient.post("/api/warehouses",data);exportconstupdateWarehouse=(warehouseId,data)=>apiClient.put(`/api/warehouses/${warehouseId}`,data);exportconstdeleteWarehouse=(warehouseId)=>apiClient.delete(`/api/warehouses/${warehouseId}`);// \app\rootReducer.jsximport{combineReducers}from"redux";importauthReducerfrom"../features/auth/authSlice";importproductsReducerfrom"../features/products/productsSlice";importcategoriesReducerfrom"../features/categories/categoriesSlice";importwarehousesReducerfrom"../features/warehouses/warehousesSlice";importreceiveReducerfrom"../features/inventory/receiveSlice";importtransferReducerfrom"../features/inventory/transferSlice";importdeliveryReducerfrom"../features/inventory/deliverySlice";importtransactionsReducerfrom"../features/transactions/transactionsSlice";importclientsReducerfrom"../features/clients/clientsSlice";importsuppliersReducerfrom"../features/suppliers/suppliersSlice";importemployeesReducerfrom"../features/employees/employeesSlice";importsummaryReducerfrom"../features/dashboard/summarySlice";importselectedWarehouseReducerfrom"../features/selectedWarehouse/selectedWarehouseSlice";importgeographyReducerfrom"../features/geography/geographySlice";exportdefaultcombineReducers({auth:authReducer,products:productsReducer,categories:categoriesReducer,warehouses:warehousesReducer,inventory:combineReducers({receive:receiveReducer,transfer:transferReducer,delivery:deliveryReducer,}),transactions:transactionsReducer,clients:clientsReducer,suppliers:suppliersReducer,employees:employeesReducer,dashboard:summaryReducer,selectedWarehouse:selectedWarehouseReducer,geography:geographyReducer,});// \app\store.jsximport{configureStore}from"@reduxjs/toolkit";importrootReducerfrom"./rootReducer";conststore=configureStore({reducer:rootReducer,middleware:(getDefaultMiddleware)=>getDefaultMiddleware({serializableCheck:false,}),});exportdefaultstore;// \components\categories\CategoryDetail.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{useParams,Link}from"react-router-dom";import{fetchCategories}from"../../features/categories/categoriesSlice";import{fetchProducts}from"../../features/products/productsSlice";import{FaChevronLeft,FaEdit}from"react-icons/fa";import{currencyFormatter}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";constCategoryDetail=()=>{const{id}=useParams();constdispatch=useDispatch();const{list:categories,status,error}=useSelector((s)=>s.categories);const{list:products,status:prodStatus}=useSelector((s)=>s.products);const[productsShown,setProductsShown]=useState(25);useEffect(()=>{if(status==="idle")dispatch(fetchCategories());dispatch(fetchProducts({categoryId:id}));},[dispatch,status]);constcat=categories.find((c)=>String(c.categoryId)===String(id));if(status==="loading"||status==="idle")return<Spinner/>;if(status==="failed")return<pclassName="text-red-500">Błąd:{error}</p>;if(!cat)return<pclassName="text-red-500">Nieznalezionokategorii.</p>;return(<divclassName="space-y-6max-w-lgmx-autobg-whitep-6rounded-lgshadow"><divclassName="flexitems-centerjustify-between"><Linkto="/categories"className="text-gray-600hover:text-pink-500transitionduration-200"><FaChevronLeftclassName="inlinemr-2"/>PowrótdoKategorii</Link><Linkto={`/categories/${cat.categoryId}/edit`}className="flexitems-centerbg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionduration-200"><FaEditclassName="mr-2"/>EdytujProdukt</Link></div><h1className="text-3xlfont-semiboldtext-gray-800">{cat.name}</h1><pclassName="text-gray-700whitespace-pre-line">{cat.description||"Brakopisu."}</p><section><h2className="text-2xlfont-semiboldmt-6mb-4">Produktywtejkategorii</h2>{prodStatus==="loading"?(<Spinner/>):products.length===0?(<pclassName="text-red-500">Brakproduktówwtejkategorii.</p>):(<><ulclassName="divide-ydivide-gray-200">{products.slice(0,productsShown).map((p)=>(<likey={p.productId}className="p-2hover:bg-gray-50flexitems-centerjustify-betweentransitionduration-200"><Linkto={`/products/${p.productId}`}className="text-pink-600hover:underline">{p.name}</Link><spanclassName="ml-2">{currencyFormatter(p.unitPrice)}</span></li>))}</ul>{products.length>productsShown&&(<buttononClick={()=>setProductsShown((prev)=>prev+25)}className="mt-4bg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionmx-autoblockduration-200">Pokażwięcej</button>)}</>)}</section></div>);};exportdefaultCategoryDetail;// \components\categories\CategoryForm.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{Link,useNavigate,useParams}from"react-router-dom";import{fetchCategories,createCategory,updateCategory,}from"../../features/categories/categoriesSlice";import{FaChevronLeft}from"react-icons/fa";importSpinnerfrom"../helper/Spinner";constCategoryForm=()=>{const{id}=useParams();constisEdit=Boolean(id);constdispatch=useDispatch();constnavigate=useNavigate();const{list:categories,status,error,formStatus,}=useSelector((state)=>state.categories);const[form,setForm]=useState({name:"",description:""});useEffect(()=>{if(status==="idle"){dispatch(fetchCategories());}},[dispatch,status]);constcat=categories.find((c)=>String(c.categoryId)===String(id));useEffect(()=>{if(isEdit&&status==="succeeded"){if(cat){setForm({name:cat.name,description:cat.description});}}},[isEdit,status,categories,id]);consthandleChange=(e)=>{const{name,value}=e.target;setForm((f)=>({...f,[name]:value}));};consthandleSubmit=async(e)=>{e.preventDefault();constpayload={name:form.name,description:form.description};letresult;if(isEdit){result=awaitdispatch(updateCategory({id:Number(id),data:payload}));}else{result=awaitdispatch(createCategory(payload));}if(result.meta.requestStatus==="fulfilled"){navigate("/categories");}};if(isEdit&&status==="loading"){return<Spinner/>;}if(status==="failed"){return<pclassName="text-red-500">Błąd:{error}</p>;}if(isEdit&&!cat){return<pclassName="text-red-500">Nieznalezionokategorii.</p>;}return(<divclassName="max-w-lgmx-autobg-whitep-6rounded-lgshadow"><Linkto="/categories"className="flexitems-centertext-gray-600hover:text-pink-500mb-6transitionduration-200"><FaChevronLeftclassName="inlinemr-2"/>PowrótdoKategorii</Link><h1className="text-2xlfont-semiboldmb-4">{isEdit?"EdytujKategorię":"NowaKategoria"}</h1>{formStatus==="failed"&&(<pclassName="text-red-500mb-4">Błąd:{error||"Nieudałosięzapisaćkategorii."}</p>)}<formonSubmit={handleSubmit}className="space-y-4"><div><labelhtmlFor="name"className="blocktext-smfont-medium">Nazwa</label><inputid="name"name="name"value={form.name}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div><div><labelhtmlFor="description"className="blocktext-smfont-medium">Opis</label><textareaid="description"name="description"value={form.description}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div><buttontype="submit"className="w-fullpy-3bg-pink-500hover:bg-pink-600text-whiterounded-lgtransitioncursor-pointerduration-200">{formStatus==="loading"?(<Spinnercolor="white"/>):isEdit?("Zapisz"):("Utwórz")}</button></form></div>);};exportdefaultCategoryForm;// \components\categories\CategoryList.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{Link}from"react-router-dom";import{fetchCategories,deleteCategory,}from"../../features/categories/categoriesSlice";import{FaTrash,FaEdit,FaEye}from"react-icons/fa";importPaginationfrom"../helper/Pagination";importTextInputfrom"../helper/TextInput";importSelectInputfrom"../helper/SelectInput";importSpinnerfrom"../helper/Spinner";importuseDebouncefrom"../../hooks/useDebounce";constCategoryList=()=>{constdispatch=useDispatch();const{list:categories,status,error}=useSelector((s)=>s.categories);const[searchTerm,setSearchTerm]=useState("");constdebouncedSearchTerm=useDebounce(searchTerm);const[sortOption,setSortOption]=useState("");const[page,setPage]=useState(1);consttotalPages=10;useEffect(()=>{dispatch(fetchCategories({searchTerm:debouncedSearchTerm||undefined,page:page||1,}));},[dispatch,debouncedSearchTerm,page]);constfiltered=[...categories].sort((a,b)=>{switch(sortOption){case"name":returna.name.localeCompare(b.name);case"name-reverse":returnb.name.localeCompare(a.name);case"description":returna.description.localeCompare(b.description);case"description-reverse":returnb.description.localeCompare(a.description);default:return0;}});consthandleDelete=(id)=>{if(window.confirm("Czynapewnochceszusunąćtękategorię?")){dispatch(deleteCategory(id));}};return(<><formclassName="flexitems-centerspace-x-2justify-between"><divclassName="flexflex-wrapgap-4items-end"><TextInputlabel="Nazwa"placeholder="Szukajkategorii..."value={searchTerm}setValue={setSearchTerm}/></div><SelectInputlabel="Sortowanie"value={sortOption}setValue={setSortOption}><optionvalue="">Sortujprzez</option><optionvalue="name">Nazwa(odAdoZ)</option><optionvalue="name-reverse">Nazwa(odZdoA)</option><optionvalue="description">Opis(odAdoZ)</option><optionvalue="description-reverse">Opis(odZdoA)</option></SelectInput></form>{status==="loading"||status==="idle"?(<Spinner/>):status==="failed"?(<pclassName="text-red-500">Błąd:{error}</p>):filtered.length===0?(<pclassName="text-red-500">Nieznalezionokategorii</p>):(<><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/><divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="hiddensm:gridgrid-cols-3gap-4p-4bg-gray-50text-xsfont-mediumtext-gray-500uppercasetracking-wider"><div>Nazwa</div><div>Opis</div><divclassName="text-center">Akcje</div></div><divclassName="divide-ydivide-gray-200">{filtered.map((cat)=>(<divkey={cat.categoryId}className="gridgrid-cols-1sm:grid-cols-3items-centergap-4p-4hover:bg-pink-50transition-colorsduration-200"><divclassName="font-mediumtext-pink-600"><Linkto={`/categories/${cat.categoryId}`}className="hover:underline">{cat.name}</Link></div><divclassName="text-smtext-gray-700truncate">{cat.description}</div><divclassName="flexjustify-centerspace-x-4text-gray-600"><Linkto={`/categories/${cat.categoryId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link><Linkto={`/categories/${cat.categoryId}/edit`}className="hover:text-pink-500transitionduration-200"><FaEdit/></Link><buttononClick={()=>handleDelete(cat.categoryId)}className="hover:text-pink-500transitionduration-200cursor-pointer"><FaTrash/></button></div></div>))}</div></div><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/></>)}</>);};exportdefaultCategoryList;// \components\clients\ClientDetail.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{useParams,Link}from"react-router-dom";import{fetchClientById}from"../../features/clients/clientsSlice";import{FaChevronLeft,FaEye}from"react-icons/fa";import{currencyFormatter,dateFormatter,numberFormatter,}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";constClientDetail=()=>{const{id}=useParams();constdispatch=useDispatch();const{current:client,status,error}=useSelector((s)=>s.clients);const[transactionsShown,setTransactionsShown]=useState(25);useEffect(()=>{dispatch(fetchClientById(id));},[dispatch,id]);if(status==="loading"||status==="idle"){return<Spinner/>;}if(status==="failed"){return<pclassName="text-red-500">Błąd:{error}</p>;}if(!client){return<pclassName="text-red-500">Nieznalezionoklienta.</p>;}const{name,email,phoneNumber,address,history=[]}=client;constaddr=address.street?`${address.street}${address.streetNumber},${address.postalCode}${address.city},${address.country}`:address;return(<divclassName="space-y-6max-w-4xlmx-auto"><divclassName="bg-whitep-6rounded-lgshadowspace-y-4"><div><Linkto="/clients"className="text-gray-600hover:text-pink-500transitionduration-200"><FaChevronLeftclassName="inline-blockmr-2"/>PowrótdoKlientów</Link></div><h1className="text-3xlfont-semiboldtext-gray-800">{name}</h1><p><strong>E-mail:</strong>{email}</p><p><strong>Nr.telefonu:</strong>{phoneNumber}</p><p><strong>Adres:</strong>{addr}</p><section><h2className="text-2xlfont-semiboldmb-4">Historiatransakcji</h2>{history.length===0?(<pclassName="text-red-500">Brakhistoriitransakcji.</p>):(<><divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="gridgrid-cols-6bg-gray-50text-xsfont-mediumtext-gray-500uppercasep-2tracking-wide"><div>Data</div><div>Typ</div><div>Opis</div><divclassName="text-right">Ilośćprzedmiotów</div><divclassName="text-right">Łącznakwota</div><divclassName="text-center">Detale</div></div><divclassName="divide-ydivide-gray-200">{[...history].reverse().slice(0,transactionsShown).map((tx)=>(<divkey={tx.transactionId}className="gridgrid-cols-6items-centerp-2text-smtext-gray-700hover:bg-pink-50transition-colorsduration-200"><div>{dateFormatter(tx.date)}</div><div>{tx.type.toLowerCase().replace(/_/g,"").replace(/\b\w/g,(c)=>c.toUpperCase())}</div><divclassName="truncate">{tx.description}</div><divclassName="text-right">{numberFormatter(tx.itemsCount)}</div><divclassName="text-right">{currencyFormatter(tx.totalPrice)}</div><divclassName="flexjustify-centertext-gray-600"><Linkto={`/transactions/${tx.transactionId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div></div>{history.length>transactionsShown&&(<buttononClick={()=>setTransactionsShown((prev)=>prev+25)}className="mt-4bg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionmx-autoblock">Pokażwięcej</button>)}</>)}</section></div></div>);};exportdefaultClientDetail;// \components\clients\ClientForm.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{useNavigate}from"react-router-dom";import{createClient}from"../../features/clients/clientsSlice";import{FaChevronDown,FaChevronLeft}from"react-icons/fa";import{Link}from"react-router-dom";import{fetchCountries,fetchRegions,}from"../../features/geography/geographySlice";importSpinnerfrom"../helper/Spinner";constClientForm=()=>{constdispatch=useDispatch();constnavigate=useNavigate();const{regions,countries}=useSelector((state)=>state.geography);const{status,error,formStatus}=useSelector((state)=>state.clients);const[form,setForm]=useState({name:"",email:"",phoneNumber:"",regionId:"",countryId:"",city:"",postalCode:"",street:"",streetNumber:"",});useEffect(()=>{dispatch(fetchRegions());},[dispatch]);useEffect(()=>{if(form.regionId){dispatch(fetchCountries(form.regionId));}else{dispatch(fetchCountries(null));}},[dispatch,form.regionId]);consthandleChange=(e)=>{const{name,value}=e.target;setForm((prev)=>({...prev,[name]:value}));};consthandleSubmit=async(e)=>{e.preventDefault();constpayload={name:form.name,email:form.email,phoneNumber:form.phoneNumber,address:{street:form.street,streetNumber:form.streetNumber,postalCode:form.postalCode,city:form.city,countryId:Number(form.countryId),regionId:Number(form.regionId),},};constresult=awaitdispatch(createClient(payload));if(result.meta.requestStatus==="fulfilled"){navigate("/clients");}};return(<divclassName="max-w-xlmx-automt-6bg-whitep-8rounded-2xlshadow-lg"><Linkto="/clients"className="flexitems-centertext-gray-600hover:text-pink-500mb-6transitionduration-200"><FaChevronLeftclassName="inlinemr-2"/>PowrótdoKlientów</Link><h1className="text-3xlfont-semiboldtext-gray-800mb-6">NowyKlient</h1>{formStatus==="failed"&&(<pclassName="text-red-500mb-4">Błąd:{error}</p>)}<formonSubmit={handleSubmit}className="space-y-5"><div><labelhtmlFor="name"className="blocktext-smfont-mediumtext-gray-700mb-1">Nazwa</label><inputid="name"name="name"value={form.name}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="email"className="blocktext-smfont-mediumtext-gray-700mb-1">E-mail</label><inputid="email"name="email"type="email"value={form.email}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="phoneNumber"className="blocktext-smfont-mediumtext-gray-700mb-1">Nr.telefonu</label><inputid="phoneNumber"name="phoneNumber"type="tel"value={form.phoneNumber}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="regionId"className="blocktext-smfont-mediumtext-gray-700mb-1">Region</label><divclassName="relative"><selectid="regionId"name="regionId"value={form.regionId}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transitionappearance-none"><optionvalue="">Wybierzregion</option>{regions.map((r)=>(<optionkey={r.id}value={r.id}>{r.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelhtmlFor="countryId"className="blocktext-smfont-mediumtext-gray-700mb-1">Kraj</label><divclassName="relative"><selectid="countryId"name="countryId"value={form.countryId}onChange={handleChange}requireddisabled={!form.regionId}className="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transitionappearance-none"><optionvalue="">Wybierzregion,apotemkraj</option>{countries.map((c)=>(<optionkey={c.id}value={c.id}>{c.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelhtmlFor="city"className="blocktext-smfont-mediumtext-gray-700mb-1">Miasto</label><inputtype="text"id="city"name="city"value={form.city}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="postalCode"className="blocktext-smfont-mediumtext-gray-700mb-1">Kodpocztowy</label><inputtype="text"id="postalCode"name="postalCode"value={form.postalCode}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="street"className="blocktext-smfont-mediumtext-gray-700mb-1">Ulica</label><inputtype="text"id="street"name="street"value={form.street}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="streetNumber"className="blocktext-smfont-mediumtext-gray-700mb-1">Numerdomu</label><inputtype="number"id="streetNumber"name="streetNumber"value={form.streetNumber}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><buttontype="submit"disabled={status==="loading"}className="w-fullpy-3bg-pink-500hover:bg-pink-600text-whiterounded-lgtransitioncursor-pointerduration-200">{formStatus==="loading"?(<Spinnercolor="white"/>):("StwórzKlienta")}</button></form></div>);};exportdefaultClientForm;// \components\clients\ClientList.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{Link}from"react-router-dom";import{fetchClients}from"../../features/clients/clientsSlice";import{FaChevronDown,FaEye}from"react-icons/fa";importTextInputfrom"../helper/TextInput";import{fetchRegions}from"../../features/geography/geographySlice";importSelectInputfrom"../helper/SelectInput";importNumberInputfrom"../helper/NumberInput";importPaginationfrom"../helper/Pagination";import{numberFormatter}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";importuseDebouncefrom"../../hooks/useDebounce";constClientList=()=>{constdispatch=useDispatch();const{list:data,status,error}=useSelector((s)=>s.clients);const{content:clients,totalPages}=data;const{regions}=useSelector((state)=>state.geography);const[searchTerm,setSearchTerm]=useState("");const[selectedRegion,setSelectedRegion]=useState("");const[minTransactions,setMinTransactions]=useState("");const[maxTransactions,setMaxTransactions]=useState("");constdebouncedSearchTerm=useDebounce(searchTerm);constdebouncedMinTransactions=useDebounce(minTransactions);constdebouncedMaxTransactions=useDebounce(maxTransactions);const[sortOption,setSortOption]=useState("");const[page,setPage]=useState(1);constselectedWarehouse=useSelector((state)=>state.selectedWarehouse);useEffect(()=>{dispatch(fetchClients({name:debouncedSearchTerm||undefined,regionId:selectedRegion||undefined,minTransactions:debouncedMinTransactions?parseInt(debouncedMinTransactions):undefined,maxTransactions:debouncedMaxTransactions?parseInt(debouncedMaxTransactions):undefined,warehouseId:selectedWarehouse||undefined,page:page||1,}));},[dispatch,debouncedSearchTerm,selectedRegion,debouncedMinTransactions,debouncedMaxTransactions,selectedWarehouse,page,]);useEffect(()=>{dispatch(fetchRegions());},[dispatch]);if(!clients){return<Spinner/>;}constfiltered=[...clients].sort((a,b)=>{switch(sortOption){case"name":returna.name.localeCompare(b.name);case"name-reverse":returnb.name.localeCompare(a.name);case"email":returna.email.localeCompare(b.email);case"email-reverse":returnb.email.localeCompare(a.email);case"phone":returna.phoneNumber.localeCompare(b.phoneNumber);case"phone-reverse":returnb.phoneNumber.localeCompare(a.phoneNumber);case"address":returna.address.localeCompare(b.address);case"address-reverse":returnb.address.localeCompare(a.address);case"transactions":returna.transactionsCount-b.transactionsCount;case"transactions-reverse":returnb.transactionsCount-a.transactionsCount;default:return0;}});return(<><formclassName="flexjustify-betweenitems-centerspace-x-4"><divclassName="flexjustify-betweenitems-centerspace-x-4"><TextInputlabel="Nazwa"placeholder="Szukajklientów..."value={searchTerm}setValue={setSearchTerm}/><SelectInputlabel="Region"value={selectedRegion}setValue={setSelectedRegion}><optionvalue="">WszystkieRegiony</option>{regions.map((reg)=>(<optionkey={reg.id}value={reg.id}>{reg.name}</option>))}</SelectInput><NumberInputlabel="Transakcje(min)"placeholder="Wybierztransakcje..."isMinus={true}value={minTransactions}setValue={setMinTransactions}/><NumberInputlabel="Transakcje(max)"placeholder="Wybierztransakcje..."isMinus={false}value={maxTransactions}setValue={setMaxTransactions}/></div><div><labelclassName="blocktext-smfont-medium">Sortowanie</label><divclassName="relative"><selectclassName="borderappearance-noneborder-gray-300rounded-lgpx-3py-2pr-12focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"value={sortOption}onChange={(e)=>setSortOption(e.target.value)}><optionvalue="">Sortujprzez</option><optionvalue="name">Nazwa(odAdoZ)</option><optionvalue="name-reverse">Nazwa(odZdoA)</option><optionvalue="email">E-mail(odAdoZ)</option><optionvalue="email-reverse">E-mail(odZdoA)</option><optionvalue="phone">Nr.telefonu(rosnąco)</option><optionvalue="phone-reverse">Nr.telefonu(malejąco)</option><optionvalue="address">Adres(odAdoZ)</option><optionvalue="address-reverse">Adres(odZdoA)</option><optionvalue="transactions">Liczbatransakcji(rosnąco)</option><optionvalue="transactions-reverse">Liczbatransakcji(malejąco)</option></select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div></form>{status==="loading"?(<Spinner/>):status==="failed"?(<pclassName="text-red-500">Błąd:{error}</p>):filtered.length===0?(<pclassName="text-red-500">Nieznalezionoklientów</p>):(<><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/><divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="hiddensm:gridgrid-cols-6gap-4p-4bg-gray-50text-xsfont-mediumtext-gray-500uppercasetracking-wider"><div>Nazwa</div><div>E-mail</div><div>Nr.telefonu</div><div>Adres</div><divclassName="text-right">Liczbatransakcji</div><divclassName="text-center">Akcje</div></div><divclassName="divide-ydivide-gray-200">{filtered.map((c)=>(<divkey={c.clientId}className="gridgrid-cols-1sm:grid-cols-6items-centergap-4p-4hover:bg-pink-50transition-colorsduration-200"><divclassName="font-mediumtext-pink-600"><Linkto={`/clients/${c.clientId}`}className="hover:underline">{c.name}</Link></div><divclassName="text-smtext-gray-700truncate">{c.email}</div><divclassName="text-smtext-gray-700">{c.phoneNumber}</div><divclassName="text-smtext-gray-700">{c.address}</div><divclassName="text-smtext-gray-700text-right">{numberFormatter(c.transactionsCount)}</div><divclassName="flexjustify-centertext-gray-600"><Linkto={`/clients/${c.clientId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div></div><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/></>)}</>);};exportdefaultClientList;// \components\Dashboard\Charts.jsximport{BarChart,Bar,XAxis,YAxis,Tooltip,Legend,ResponsiveContainer,PieChart,Pie,Cell,}from"recharts";exportdefaultfunctionCharts({summary}){constbarData=[{name:"Miesięczne",Przyjęcia:summary.monthlyReceipts,Wydania:summary.monthlyDeliveries,},];constinStock=summary.productsCount-summary.lowStockCount;constpieData=[{name:"Niskistan",value:summary.lowStockCount},{name:"Wmagazynie",value:inStock},];constCOLORS=["#EF4444","#10B981"];return(<divclassName="gridgrid-cols-1lg:grid-cols-2gap-6"><divclassName="bg-whiterounded-lgshadowp-6"><h2className="text-lgfont-semiboldmb-4">Ruchymiesięczne</h2><ResponsiveContainerwidth="100%"height={260}><BarChartdata={barData}><XAxisdataKey="name"tick={{fill:"#6B7280"}}/><YAxistick={{fill:"#6B7280"}}/><Tooltip/><Legend/><BardataKey="Przyjęcia"fill="#3B82F6"/><BardataKey="Wydania"fill="#8B5CF6"/></BarChart></ResponsiveContainer></div><divclassName="bg-whiterounded-lgshadowp-6"><h2className="text-lgfont-semiboldmb-4">Stanzapasów</h2><ResponsiveContainerwidth="100%"height={260}><PieChart><Piedata={pieData}dataKey="value"nameKey="name"innerRadius={50}outerRadius={80}label>{pieData.map((_,idx)=>(<Cellkey={idx}fill={COLORS[idx]}/>))}</Pie><Tooltip/><LegendverticalAlign="bottom"height={36}/></PieChart></ResponsiveContainer></div></div>);}// \components\Dashboard\SummaryTiles.jsximport{Link}from"react-router-dom";import{FaBox,FaTags,FaTruckLoading,FaTruckPickup,FaExclamationTriangle,FaStar,FaDollarSign,FaSyncAlt,FaCalendarCheck,FaCalendarDay,}from"react-icons/fa";import{currencyFormatter,dateFormatter,numberFormatter,}from"../../utils/helpers";constSummaryTiles=({summary})=>{const{productsCount,categoriesCount,monthlyReceipts,monthlyDeliveries,lowStockCount,topProduct,inventoryValue,turnoverLastWeek,lastReceiptDate,lastDeliveryDate,lastReceiptId,lastDeliveryId,topProductId,}=summary;consttiles=[{icon:<FaBoxclassName="text-pink-400w-6h-6"/>,label:"Produkty",value:numberFormatter(productsCount),to:"/products",},{icon:<FaTagsclassName="text-pink-400w-6h-6"/>,label:"Kategorie",value:numberFormatter(categoriesCount),to:"/categories",},{icon:<FaTruckLoadingclassName="text-pink-400w-6h-6"/>,label:"Przyjęcia(mies.)",value:numberFormatter(monthlyReceipts),to:"/inventory/receive",},{icon:<FaTruckPickupclassName="text-pink-400w-6h-6"/>,label:"Wydania(mies.)",value:numberFormatter(monthlyDeliveries),to:"/inventory/delivery",},{icon:<FaExclamationTriangleclassName="text-pink-400w-6h-6"/>,label:"Niskistan",value:numberFormatter(lowStockCount),to:"/products?filter=low-stock",},{icon:<FaStarclassName="text-pink-400w-6h-6"/>,label:"Bestseller",value:topProduct,to:topProductId?`/products/${topProductId}`:"/products",},{icon:<FaDollarSignclassName="text-pink-400w-6h-6"/>,label:"Wartośćzapasów",value:currencyFormatter(inventoryValue),to:"/warehouses",},{icon:<FaSyncAltclassName="text-pink-400w-6h-6"/>,label:"Obrót(ost.tydz.)",value:currencyFormatter(turnoverLastWeek),to:"/transactions?period=last-week",},{icon:<FaCalendarCheckclassName="text-pink-400w-6h-6"/>,label:"Ostatnieprzyjęcie",value:dateFormatter(lastReceiptDate),to:lastReceiptId?`/transactions/${lastReceiptId}`:"/transactions",},{icon:<FaCalendarDayclassName="text-pink-400w-6h-6"/>,label:"Ostatniewydanie",value:dateFormatter(lastDeliveryDate),to:lastDeliveryId?`/transactions/${lastDeliveryId}`:"/transactions",},];return(<divclassName="gridgrid-cols-1sm:grid-cols-2lg:grid-cols-5gap-4cursor-pointer">{tiles.map(({icon,label,value,to})=>{consttileContent=(<divclassName="bg-whiterounded-lgshadowp-4flexflex-colitems-starthover:bg-pink-50transition-colors"><divclassName="flexitems-centermb-2">{icon}<pclassName="ml-2text-smtext-gray-400">{label}</p></div><pclassName="text-2xlfont-semiboldtext-gray-800">{value}</p></div>);returnto?(<Linkkey={label}to={to}>{tileContent}</Link>):(<divkey={label}>{tileContent}</div>);})}</div>);};exportdefaultSummaryTiles;// \components\employees\EmployeeDetail.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{useParams,Link}from"react-router-dom";import{fetchEmployeeById}from"../../features/employees/employeesSlice";import{FaChevronLeft,FaEye}from"react-icons/fa";import{currencyFormatter,dateFormatter,numberFormatter,}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";constEmployeeDetail=()=>{const{id}=useParams();constdispatch=useDispatch();const[transactionsShown,setTransactionsShown]=useState(25);const{current:employee,status,error,}=useSelector((state)=>state.employees);useEffect(()=>{dispatch(fetchEmployeeById(id));},[dispatch,id]);if(status==="loading"||status==="idle"){return<Spinner/>;}if(status==="failed"){return<pclassName="text-red-500">Błąd:{error}</p>;}if(!employee){return<pclassName="text-red-500">Nieznalezionopracownika.</p>;}const{name,surname,email,phoneNumber,position,warehouseId,warehouseName,history=[],}=employee;return(<divclassName="space-y-6max-w-4xlmx-auto"><divclassName="bg-whitep-6rounded-lgshadowspace-y-2"><div><Linkto="/employees"className="text-gray-600hover:text-pink-500transitionduration-200"><FaChevronLeftclassName="inline-blockmr-2"/>PowrótdoPracowników</Link></div><h1className="text-3xlfont-semiboldtext-gray-800">{name}{surname}</h1><p><strong>Stanowisko:</strong>{position}</p><p><strong>Email:</strong>{email}</p><p><strong>Telefon:</strong>{phoneNumber}</p><p><strong>Magazyn:</strong>{""}<Linkto={`/warehouses/${warehouseId}`}className="text-pink-600hover:underline">{warehouseName}</Link></p><section><h2className="text-2xlfont-semiboldmb-4">HistoriaTransakcji</h2>{history.length===0?(<pclassName="text-red-500">Brakhistoriitransakcji.</p>):(<><divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="gridgrid-cols-6bg-gray-50text-xsfont-mediumtext-gray-500uppercasep-2tracking-wide"><div>Data</div><div>Typ</div><div>Opis</div><divclassName="text-right">Ilośćprzedmiotów</div><divclassName="text-right">Łącznakwota</div><divclassName="text-center">Szczegóły</div></div><divclassName="divide-ydivide-gray-200">{[...history].reverse().slice(0,transactionsShown).map((tx)=>(<divkey={tx.transactionId}className="gridgrid-cols-6items-centerp-2text-smtext-gray-700hover:bg-pink-50transition-colorsduration-200"><div>{dateFormatter(tx.date)}</div><div>{tx.type.toLowerCase().replace(/_/g,"").replace(/\b\w/g,(c)=>c.toUpperCase())}</div><divclassName="truncate">{tx.description}</div><divclassName="text-right">{numberFormatter(tx.itemsCount)}</div><divclassName="text-right">{currencyFormatter(tx.totalPrice)}</div><divclassName="flexjustify-centertext-gray-600"><Linkto={`/transactions/${tx.transactionId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div></div>{history.length>transactionsShown&&(<buttononClick={()=>setTransactionsShown((prev)=>prev+25)}className="mt-4bg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionmx-autoblock">Pokażwięcej</button>)}</>)}</section></div></div>);};exportdefaultEmployeeDetail;// \components\employees\EmployeeForm.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{useNavigate,useParams,Link}from"react-router-dom";import{FaChevronDown,FaChevronLeft}from"react-icons/fa";import{createEmployee}from"../../features/employees/employeesSlice";import{fetchWarehouses}from"../../features/warehouses/warehousesSlice";importSpinnerfrom"../helper/Spinner";constEmployeeForm=()=>{const{id}=useParams();constdispatch=useDispatch();constnavigate=useNavigate();const{list:warehouses}=useSelector((state)=>state.warehouses);const{error,formStatus}=useSelector((state)=>state.employees);const[form,setForm]=useState({name:"",surname:"",email:"",phoneNumber:"",position:"",warehouseId:"",});useEffect(()=>{dispatch(fetchWarehouses());},[dispatch,id]);consthandleChange=(e)=>{const{name,value}=e.target;setForm((prev)=>({...prev,[name]:value}));};consthandleSubmit=async(e)=>{e.preventDefault();constpayload={name:form.name,surname:form.surname,email:form.email,phoneNumber:form.phoneNumber,position:form.position,warehouseId:parseInt(form.warehouseId,10),};constresult=awaitdispatch(createEmployee(payload));if(result.meta.requestStatus==="fulfilled"){navigate("/employees");}};return(<divclassName="max-w-lgmx-autobg-whitep-6rounded-lgshadow-lg"><Linkto="/employees"className="flexitems-centertext-gray-600hover:text-pink-500mb-6transitionduration-200"><FaChevronLeftclassName="mr-2"/>PowrótdoPracowników</Link><h1className="text-3xlfont-semiboldtext-gray-800mb-6">NowyPracownik</h1>{formStatus==="failed"&&(<pclassName="text-red-500mb-4">Błąd:{error}</p>)}<formonSubmit={handleSubmit}className="space-y-5"><div><labelhtmlFor="name"className="blocktext-smfont-mediumtext-gray-700mb-1">Imię</label><inputid="name"name="name"value={form.name}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="surname"className="blocktext-smfont-mediumtext-gray-700mb-1">Nazwisko</label><inputid="surname"name="surname"value={form.surname}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="email"className="blocktext-smfont-mediumtext-gray-700mb-1">E-mail</label><inputid="email"name="email"type="email"value={form.email}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="phoneNumber"className="blocktext-smfont-mediumtext-gray-700mb-1">Telefon</label><inputid="phoneNumber"name="phoneNumber"type="tel"value={form.phoneNumber}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="position"className="blocktext-smfont-mediumtext-gray-700mb-1">Stanowisko</label><inputid="position"name="position"value={form.position}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="warehouseId"className="blocktext-smfont-mediumtext-gray-700mb-1">Magazyn</label><divclassName="relative"><selectid="warehouseId"name="warehouseId"value={form.warehouseId}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transitionappearance-none"><optionvalue="">Wybierzmagazyn</option>{warehouses.map((wh)=>(<optionkey={wh.warehouseId}value={wh.warehouseId}>{wh.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><buttontype="submit"className="w-fullpy-3bg-pink-500hover:bg-pink-600text-whiterounded-lgtransitioncursor-pointerduration-200">{formStatus==="loading"?(<Spinnercolor="white"/>):("UtwórzPracownika")}</button></form></div>);};exportdefaultEmployeeForm;// \components\employees\EmployeeList.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{Link}from"react-router-dom";import{FaEye,FaChevronDown}from"react-icons/fa";import{fetchEmployees}from"../../features/employees/employeesSlice";import{fetchRegions}from"../../features/geography/geographySlice";importTextInputfrom"../helper/TextInput";importSelectInputfrom"../helper/SelectInput";importNumberInputfrom"../helper/NumberInput";importPaginationfrom"../helper/Pagination";import{numberFormatter}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";importuseDebouncefrom"../../hooks/useDebounce";constEmployeeList=()=>{constdispatch=useDispatch();const{list:employees,status,error,}=useSelector((state)=>state.employees);const{regions}=useSelector((state)=>state.geography);const[searchTerm,setSearchTerm]=useState("");const[selectedRegion,setSelectedRegion]=useState("");const[minTransactions,setMinTransactions]=useState("");const[maxTransactions,setMaxTransactions]=useState("");constdebouncedSearchTerm=useDebounce(searchTerm);constdebouncedMinTransactions=useDebounce(minTransactions);constdebouncedMaxTransactions=useDebounce(maxTransactions);const[sortOption,setSortOption]=useState("");const[page,setPage]=useState(1);consttotalPages=10;constselectedWarehouse=useSelector((state)=>state.selectedWarehouse);useEffect(()=>{dispatch(fetchEmployees({name:debouncedSearchTerm||undefined,regionId:selectedRegion||undefined,minTransactions:debouncedMinTransactions?parseInt(debouncedMinTransactions):undefined,maxTransactions:debouncedMaxTransactions?parseInt(debouncedMaxTransactions):undefined,warehouseId:selectedWarehouse||undefined,page:page||1,}));},[dispatch,debouncedSearchTerm,selectedRegion,debouncedMinTransactions,debouncedMaxTransactions,selectedWarehouse,page,]);useEffect(()=>{dispatch(fetchRegions());},[dispatch]);constfiltered=[...employees].sort((a,b)=>{switch(sortOption){case"name":return`${a.name}${a.surname}`.localeCompare(`${b.name}${b.surname}`);case"name-reverse":return`${b.name}${b.surname}`.localeCompare(`${a.name}${a.surname}`);case"email":returna.email.localeCompare(b.email);case"email-reverse":returnb.email.localeCompare(a.email);case"phone":returna.phoneNumber.localeCompare(b.phoneNumber);case"phone-reverse":returnb.phoneNumber.localeCompare(a.phoneNumber);case"positions":returna.position.localeCompare(b.position);case"positions-reverse":returnb.position.localeCompare(a.position);case"warehouse":returna.warehouseName.localeCompare(b.warehouseName);case"warehouse-reverse":returnb.warehouseName.localeCompare(a.warehouseName);default:return0;}});return(<><formclassName="flexjustify-betweenitems-centerspace-x-4"><divclassName="flexjustify-betweenitems-centerspace-x-4"><TextInputlabel="Nazwa"placeholder="Szukajklientów..."value={searchTerm}setValue={setSearchTerm}/><SelectInputlabel="Region"value={selectedRegion}setValue={setSelectedRegion}><optionvalue="">WszystkieRegiony</option>{regions.map((reg)=>(<optionkey={reg.id}value={reg.id}>{reg.name}</option>))}</SelectInput><NumberInputlabel="Transakcje(min)"placeholder="Wybierztransakcje..."isMinus={true}value={minTransactions}setValue={setMinTransactions}/><NumberInputlabel="Transakcje(max)"placeholder="Wybierztransakcje..."isMinus={false}value={maxTransactions}setValue={setMaxTransactions}/></div><div><labelclassName="blocktext-smfont-medium">Sortowanie</label><divclassName="relative"><selectclassName="borderappearance-noneborder-gray-300rounded-lgpx-3py-2pr-12focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"value={sortOption}onChange={(e)=>setSortOption(e.target.value)}><optionvalue="">Sortujprzez</option><optionvalue="name">ImięiNazwisko(odAdoZ)</option><optionvalue="name-reverse">ImięiNazwisko(odZdoA)</option><optionvalue="email">E-mail(odAdoZ)</option><optionvalue="email-reverse">E-mail(odZdoA)</option><optionvalue="phone">Nr.telefonu(rosnąco)</option><optionvalue="phone-reverse">Nr.telefonu(malejąco)</option><optionvalue="positions">Stanowisko(odAdoZ)</option><optionvalue="positions-reverse">Stanowisko(odZdoA)</option><optionvalue="warehouse">Magazyn(odAdoZ)</option><optionvalue="warehouse-reverse">Magazyn(odZdoA)</option></select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div></form>{status==="loading"||status==="idle"?(<Spinner/>):status==="failed"?(<pclassName="text-red-500">Błąd:{error}</p>):filtered.length===0?(<pclassName="text-red-500">Nieznalezionopracowników</p>):(<><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/><divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="hiddensm:gridgrid-cols-7gap-4p-4bg-gray-50text-xsfont-mediumtext-gray-500uppercasetracking-wider"><div>ImięiNazwisko</div><div>E-mail</div><div>Nr.telefonu</div><div>Stanowisko</div><div>Magazyn</div><divclassName="text-right">Liczbatransakcji</div><divclassName="text-center">Akcje</div></div><divclassName="divide-ydivide-gray-200">{filtered.map((emp)=>(<divkey={emp.employeeId}className="gridgrid-cols-1sm:grid-cols-7items-centergap-4p-4hover:bg-pink-50transition-colorsduration-200"><divclassName="font-mediumtext-pink-600"><Linkto={`/employees/${emp.employeeId}`}className="hover:underline">{emp.name}{emp.surname}</Link></div><divclassName="text-smtext-gray-700truncate">{emp.email}</div><divclassName="text-smtext-gray-700">{emp.phoneNumber}</div><divclassName="text-smtext-gray-700">{emp.position}</div><divclassName="text-smtext-gray-700">{emp.warehouseName}</div><divclassName="text-smtext-gray-700text-right">{numberFormatter(emp.transactionsCount)}</div><divclassName="flexjustify-centertext-gray-600"><Linkto={`/employees/${emp.employeeId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div></div><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/></>)}</>);};exportdefaultEmployeeList;// \components\geography\CountryList.jsximport{useEffect}from"react";import{fetchCountries}from"../../features/geography/geographySlice";import{useDispatch,useSelector}from"react-redux";importSpinnerfrom"../helper/Spinner";constCountryList=({regionId,regionName})=>{constdispatch=useDispatch();const{countries,status,error}=useSelector((state)=>state.geography);useEffect(()=>{if(regionId){dispatch(fetchCountries(regionId));}},[dispatch,regionId]);returnstatus==="loading"||status==="idle"?(<Spinner/>):status==="failed"?(<pclassName="text-red-500">Error:{error}</p>):(<divclassName="bg-whitep-6rounded-lgshadow"><h2className="text-xlfont-semiboldmb-4">Kraje{regionId?`—wybranoregion${regionName}`:""}</h2>{!regionId?(<pclassName="text-gray-500">Wybierzregion,abyzobaczyćkraje.</p>):countries.length>0?(<ulclassName="space-y-2">{countries.map((c)=>(<likey={c.id}className="px-4py-2borderborder-gray-200rounded-lghover:bg-gray-100transitionduration-200">{c.name}</li>))}</ul>):(<pclassName="text-red-500">Brakkrajówwtymregionie.</p>)}</div>);};exportdefaultCountryList;// \components\geography\RegionList.jsximport{useEffect}from"react";import{fetchRegions}from"../../features/geography/geographySlice";import{useDispatch,useSelector}from"react-redux";importSpinnerfrom"../helper/Spinner";constRegionList=({selectedRegion,onSelect})=>{constdispatch=useDispatch();const{regions,status,error}=useSelector((state)=>state.geography);useEffect(()=>{dispatch(fetchRegions());},[dispatch]);returnstatus==="loading"||status==="idle"?(<Spinner/>):status==="failed"?(<pclassName="text-red-500">Error:{error}</p>):(<divclassName="bg-whitep-6rounded-lgshadow"><h2className="text-xlfont-semiboldmb-4">Regiony</h2><ulclassName="space-y-2">{regions.map((r)=>(<likey={r.id}className={`px-4py-2borderborder-gray-200rounded-lgtransitioncursor-pointer${selectedRegion.id===r.id?"bg-pink-100text-pink-800":"hover:bg-gray-100transitionduration-200"}`}onClick={()=>onSelect({id:r.id,name:r.name})}><buttonclassName={`w-fulltext-leftrounded-lgcursor-pointer`}>{r.name}</button></li>))}</ul></div>);};exportdefaultRegionList;// \components\helper\DateInput.jsxconstDateInput=({label,value,setValue})=>(<div><labelclassName="blocktext-smfont-medium">{label}</label><inputtype="date"name="fromDate"value={value}onChange={setValue}className="borderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div>);exportdefaultDateInput;// \components\helper\NumberInput.jsximport{FaMinus,FaPlus}from"react-icons/fa";constNumberInput=({label,placeholder,isMinus,value,setValue})=>(<div><labelclassName="blocktext-smfont-medium">{label}</label><divclassName="flexborderborder-gray-300rounded-lgitems-centerpx-3py-2focus-within:ring-1focus-within:ring-pink-500focus-within:border-pink-500transition-colorsduration-300">{isMinus?(<FaMinusclassName="text-gray-500mr-2"/>):(<FaPlusclassName="text-gray-500mr-2"/>)}<inputtype="number"min="0"placeholder={placeholder}className="w-fullfocus:outline-none"value={value}onChange={(e)=>setValue(e.target.value)}/></div></div>);exportdefaultNumberInput;// \components\helper\Pagination.jsxconstPagination=({currentPage,totalPages,onPageChange})=>{returntotalPages>1?(<divclassName="flexjustify-leftgap-8items-centermt-4"><buttononClick={()=>onPageChange((p)=>Math.max(p-1,1))}disabled={currentPage===1}className="bg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitiondisabled:opacity-50disabled:cursor-not-allowedcursor-pointer">Poprzednia</button><span>Strona{currentPage}z{totalPages}</span><buttononClick={()=>onPageChange((p)=>p+1)}disabled={currentPage>=totalPages}className="bg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitiondisabled:opacity-50disabled:cursor-not-allowedcursor-pointer">Następna</button></div>):null;};exportdefaultPagination;// \components\helper\SelectInput.jsximport{FaChevronDown}from"react-icons/fa";constSelectInput=({children,label,value,setValue})=>(<div><labelclassName="blocktext-smfont-medium">{label}</label><divclassName="relative"><selectclassName="borderborder-gray-300rounded-lgpx-3py-2pr-12appearance-nonefocus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"value={value}onChange={(e)=>setValue(e.target.value)}>{children}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div>);exportdefaultSelectInput;// \components\helper\Spinner.jsxconstSpinner=({color})=>(<divclassName="flexjustify-centeritems-center"><divclassName={`animate-spinh-8w-8border-4${color==="white"?"border-white-500":"border-pink-500"}border-t-transparentrounded-full`}/></div>);exportdefaultSpinner;// \components\helper\TextInput.jsximport{FaSearch}from"react-icons/fa";constTextInput=({label,placeholder,value,setValue})=>(<div><labelclassName="blocktext-smfont-medium">{label}</label><divclassName="flexborder-gray-300items-centerborderrounded-lgpx-3py-2focus-within:ring-1focus-within:ring-pink-500focus-within:border-pink-500transition-colorsduration-300"><FaSearchclassName="text-gray-500mr-2"/><inputtype="text"placeholder={placeholder}className="focus:outline-none"value={value}onChange={(e)=>setValue(e.target.value)}/></div></div>);exportdefaultTextInput;// \components\inventory\DeliveryPage.jsximport{useState,useEffect}from"react";import{useDispatch,useSelector}from"react-redux";import{fetchWarehouses}from"../../features/warehouses/warehousesSlice";import{deliverInventory}from"../../features/inventory/deliverySlice";import{fetchProducts}from"../../features/products/productsSlice";import{fetchClients}from"../../features/clients/clientsSlice";import{fetchEmployees}from"../../features/employees/employeesSlice";import{FaChevronDown,FaPlus,FaTrash,FaTruck}from"react-icons/fa";importSpinnerfrom"../helper/Spinner";import{Link}from"react-router-dom";constDeliveryPage=()=>{constdispatch=useDispatch();const{list:warehouses}=useSelector((s)=>s.warehouses);const{list:clientsData}=useSelector((s)=>s.clients);const{list:products}=useSelector((s)=>s.products);const{list:employees}=useSelector((s)=>s.employees);const{content:clients}=clientsData;const{status,error,transaction}=useSelector((s)=>s.inventory.delivery);const[form,setForm]=useState({warehouseId:"",clientId:"",employeeId:"",items:[{productId:"",quantity:""}],});useEffect(()=>{dispatch(fetchWarehouses());dispatch(fetchClients());dispatch(fetchProducts());},[dispatch]);useEffect(()=>{dispatch(fetchEmployees({warehouseId:form.warehouseId?Number(form.warehouseId):undefined,}));},[dispatch,form.warehouseId]);consthandleAddRow=()=>setForm((f)=>({...f,items:[...f.items,{productId:"",quantity:""}],}));consthandleRemoveRow=(idx)=>setForm((f)=>({...f,items:f.items.filter((_,i)=>i!==idx),}));consthandleItemChange=(idx,field,value)=>{constitems=[...form.items];items[idx][field]=value;setForm((f)=>({...f,items}));};consthandleSubmit=async(e)=>{e.preventDefault();constitemsPayload={};form.items.forEach(({productId,quantity})=>{if(productId&&quantity){itemsPayload[productId]=Number(quantity);}});constresult=awaitdispatch(deliverInventory({warehouseId:Number(form.warehouseId),clientId:Number(form.clientId),employeeId:Number(form.employeeId),items:itemsPayload,}));if(result.meta.requestStatus==="fulfilled"){setForm(()=>({warehouseId:"",clientId:"",employeeId:"",items:[{productId:"",quantity:""}],}));}};return(<divclassName="max-w-3xlmx-autospace-y-6"><divclassName="flexitems-centerspace-x-2"><FaTruckclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Wydanietowaru</h1>{status==="failed"&&(<pclassName="text-red-500ml-4">Błąd:{error}</p>)}{status==="succeeded"&&(<pclassName="text-green-600ml-4">Wydanotowarpomyślnie!IDtransakcji:{""}<Linkto={`/transactions/${transaction?.transactionId}`}className="text-pink-600hover:underline">{transaction?.transactionId}</Link></p>)}</div><formonSubmit={handleSubmit}className="bg-whitep-6rounded-lgshadowspace-y-4"><divclassName="gridgrid-cols-1md:grid-cols-2gap-4"><div><labelclassName="blocktext-smfont-mediummb-1">Magazyn</label><divclassName="relative"><selectrequiredvalue={form.warehouseId}onChange={(e)=>setForm((f)=>({...f,warehouseId:e.target.value}))}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzmagazyn</option>{warehouses.map((w)=>(<optionkey={w.warehouseId}value={w.warehouseId}>{w.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelclassName="blocktext-smfont-mediummb-1">Klient</label><divclassName="relative"><selectrequiredvalue={form.clientId}onChange={(e)=>setForm((f)=>({...f,clientId:e.target.value}))}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzklienta</option>{clients.map((c)=>(<optionkey={c.clientId}value={c.clientId}>{c.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelclassName="blocktext-smfont-mediummb-1">Pracownik</label><divclassName="relative"><selectrequiredvalue={form.employeeId}onChange={(e)=>setForm((f)=>({...f,employeeId:e.target.value}))}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzpracownika</option>{employees.map((e)=>(<optionkey={e.employeeId}value={e.employeeId}>{e.name}{e.surname}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div></div><divclassName="space-y-3"><labelclassName="text-smfont-medium">Produktyorazichilość</label>{form.items.map((item,idx)=>(<divkey={idx}className="gridgrid-cols-5gap-2items-end"><divclassName="col-span-3"><divclassName="relative"><selectrequiredvalue={item.productId}onChange={(e)=>handleItemChange(idx,"productId",e.target.value)}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzprodukt</option>{products.map((p)=>(<optionkey={p.productId}value={p.productId}>{p.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><inputtype="number"min="1"requiredplaceholder="Ilość"value={item.quantity}onChange={(e)=>handleItemChange(idx,"quantity",e.target.value)}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"/></div><buttontype="button"onClick={()=>handleRemoveRow(idx)}className="flexjustify-centeritems-centertext-red-500hover:text-red-700h-fullcursor-pointertransitionduration-200"><FaTrash/></button></div>))}<buttontype="button"onClick={handleAddRow}className="flexitems-centertext-pink-600hover:text-pink-800mt-4transitionduration-200"><FaPlusclassName="mr-1"/>Dodajnastępnyprodukt</button></div><divclassName="pt-4border-t"><buttontype="submit"disabled={status==="loading"}className="w-fullpy-3bg-pink-500hover:bg-pink-600text-whiterounded-lgtransitiondisabled:opacity-50duration-200">{status==="loading"?<Spinnercolor="white"/>:"Wydajprodukt"}</button></div></form></div>);};exportdefaultDeliveryPage;// \components\inventory\ReceivePage.jsximport{useState,useEffect}from"react";import{useDispatch,useSelector}from"react-redux";import{fetchWarehouses}from"../../features/warehouses/warehousesSlice";import{fetchSuppliers}from"../../features/suppliers/suppliersSlice";import{receiveInventory}from"../../features/inventory/receiveSlice";import{fetchProducts}from"../../features/products/productsSlice";import{fetchEmployees}from"../../features/employees/employeesSlice";import{FaChevronDown,FaPlus,FaTrash,FaTruck}from"react-icons/fa";importSpinnerfrom"../helper/Spinner";import{Link}from"react-router-dom";constReceivePage=()=>{constdispatch=useDispatch();const{list:warehouses}=useSelector((s)=>s.warehouses);const{list:suppliersData}=useSelector((s)=>s.suppliers);const{list:products}=useSelector((s)=>s.products);const{list:employees}=useSelector((s)=>s.employees);const{content:suppliers}=suppliersData;const{status,error,transaction}=useSelector((s)=>s.inventory.receive);const[form,setForm]=useState({warehouseId:"",supplierId:"",employeeId:"",items:[{productId:"",quantity:""}],});useEffect(()=>{dispatch(fetchWarehouses());dispatch(fetchSuppliers());dispatch(fetchProducts());},[dispatch]);useEffect(()=>{dispatch(fetchEmployees({warehouseId:form.warehouseId?Number(form.warehouseId):undefined,}));},[dispatch,form.warehouseId]);consthandleAddRow=()=>setForm((f)=>({...f,items:[...f.items,{productId:"",quantity:""}],}));consthandleRemoveRow=(idx)=>setForm((f)=>({...f,items:f.items.filter((_,i)=>i!==idx),}));consthandleItemChange=(idx,field,value)=>{constitems=[...form.items];items[idx][field]=value;setForm((f)=>({...f,items}));};consthandleSubmit=async(e)=>{e.preventDefault();constitemsPayload={};form.items.forEach(({productId,quantity})=>{if(productId&&quantity){itemsPayload[productId]=Number(quantity);}});constresult=awaitdispatch(receiveInventory({warehouseId:Number(form.warehouseId),supplierId:Number(form.supplierId),employeeId:Number(form.employeeId),items:itemsPayload,}));if(result.meta.requestStatus==="fulfilled"){setForm(()=>({warehouseId:"",supplierId:"",employeeId:"",items:[{productId:"",quantity:""}],}));}};return(<divclassName="max-w-3xlmx-autospace-y-6"><divclassName="flexitems-centerspace-x-2"><FaTruckclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Przyjęcietowaru</h1>{status==="failed"&&(<pclassName="text-red-500ml-4">Błąd:{error}</p>)}{status==="succeeded"&&(<pclassName="text-green-600ml-4">Towarzostałprzyjętypomyślnie!TransakcjaID:{""}<Linkto={`/transactions/${transaction?.transactionId}`}className="text-pink-600hover:underline">{transaction?.transactionId}</Link></p>)}</div><formonSubmit={handleSubmit}className="bg-whitep-6rounded-lgshadowspace-y-4"><divclassName="gridgrid-cols-1md:grid-cols-2gap-4"><div><labelclassName="blocktext-smfont-mediummb-1">Magazyn</label><divclassName="relative"><selectrequiredvalue={form.warehouseId}onChange={(e)=>setForm((f)=>({...f,warehouseId:e.target.value}))}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzmagazyn</option>{warehouses.map((w)=>(<optionkey={w.warehouseId}value={w.warehouseId}>{w.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelclassName="blocktext-smfont-mediummb-1">Dostawca</label><divclassName="relative"><selectrequiredvalue={form.supplierId}onChange={(e)=>setForm((f)=>({...f,supplierId:e.target.value}))}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzdostawce</option>{suppliers.map((s)=>(<optionkey={s.supplierId}value={s.supplierId}>{s.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelclassName="blocktext-smfont-mediummb-1">Pracownik</label><divclassName="relative"><selectrequiredvalue={form.employeeId}onChange={(e)=>setForm((f)=>({...f,employeeId:e.target.value}))}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzpracownika</option>{employees.map((e)=>(<optionkey={e.employeeId}value={e.employeeId}>{e.name}{e.surname}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div></div><divclassName="space-y-3"><labelclassName="text-smfont-medium">Produktyorazichilość</label>{form.items.map((item,idx)=>(<divkey={idx}className="gridgrid-cols-5gap-2items-end"><divclassName="col-span-3"><divclassName="relative"><selectrequiredvalue={item.productId}onChange={(e)=>handleItemChange(idx,"productId",e.target.value)}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzprodukt</option>{products.map((p)=>(<optionkey={p.productId}value={p.productId}>{p.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><inputtype="number"min="1"requiredplaceholder="Ilość"value={item.quantity}onChange={(e)=>handleItemChange(idx,"quantity",e.target.value)}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div><buttontype="button"onClick={()=>handleRemoveRow(idx)}className="flexjustify-centeritems-centertext-red-500hover:text-red-700h-fullcursor-pointertransitionduration-200"><FaTrash/></button></div>))}<buttontype="button"onClick={handleAddRow}className="flexitems-centertext-pink-600hover:text-pink-800mt-4transtionduration-200"><FaPlusclassName="mr-1"/>Dodajnastępnyprodukt</button></div><divclassName="pt-4border-t"><buttontype="submit"disabled={status==="loading"}className="w-fullpy-3bg-pink-500hover:bg-pink-600text-whiterounded-lgtransitiondisabled:opacity-50duration-200">{status==="loading"?(<Spinnercolor="white"/>):("Przyjmijtowar")}</button></div></form></div>);};exportdefaultReceivePage;// \components\inventory\TransferPage.jsximport{useState,useEffect}from"react";import{useDispatch,useSelector}from"react-redux";import{fetchWarehouses}from"../../features/warehouses/warehousesSlice";import{transferInventory}from"../../features/inventory/transferSlice";import{fetchProducts}from"../../features/products/productsSlice";import{fetchEmployees}from"../../features/employees/employeesSlice";import{FaChevronDown,FaExchangeAlt,FaPlus,FaTrash}from"react-icons/fa";importSpinnerfrom"../helper/Spinner";import{Link}from"react-router-dom";constTransferPage=()=>{constdispatch=useDispatch();const{list:warehouses}=useSelector((s)=>s.warehouses);const{list:products}=useSelector((s)=>s.products);const{list:employees}=useSelector((s)=>s.employees);const{status,error,transaction}=useSelector((s)=>s.inventory.transfer);const[form,setForm]=useState({fromWarehouseId:"",toWarehouseId:"",employeeId:"",items:[{productId:"",quantity:""}],});useEffect(()=>{dispatch(fetchWarehouses());dispatch(fetchProducts());},[dispatch]);useEffect(()=>{dispatch(fetchEmployees({warehouseId:form.toWarehouseId?Number(form.toWarehouseId):undefined,}));},[dispatch,form.toWarehouseId]);consthandleAddRow=()=>setForm((f)=>({...f,items:[...f.items,{productId:"",quantity:""}],}));consthandleRemoveRow=(idx)=>setForm((f)=>({...f,items:f.items.filter((_,i)=>i!==idx),}));consthandleItemChange=(idx,field,value)=>{constitems=[...form.items];items[idx][field]=value;setForm((f)=>({...f,items}));};consthandleSubmit=async(e)=>{e.preventDefault();constitemsPayload={};form.items.forEach(({productId,quantity})=>{if(productId&&quantity){itemsPayload[productId]=Number(quantity);}});constresult=awaitdispatch(transferInventory({fromWarehouseId:Number(form.fromWarehouseId),toWarehouseId:Number(form.toWarehouseId),employeeId:Number(form.employeeId),items:itemsPayload,}));if(result.meta.requestStatus==="fulfilled"){setForm(()=>({fromWarehouseId:"",toWarehouseId:"",employeeId:"",items:[{productId:"",quantity:""}],}));}};return(<divclassName="max-w-3xlmx-autospace-y-6"><divclassName="flexitems-centerspace-x-2"><FaExchangeAltclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Przeniesienietowaru</h1>{status==="failed"&&(<pclassName="text-red-500ml-4">Błąd:{error}</p>)}{status==="succeeded"&&(<pclassName="text-green-600ml-4">Przeniesieniezakończonesukcesem!IDtransakcji:{""}<Linkto={`/transactions/${transaction?.transactionId}`}className="text-pink-600hover:underline">{transaction?.transactionId}</Link></p>)}</div><formonSubmit={handleSubmit}className="bg-whitep-6rounded-lgshadowspace-y-4"><divclassName="gridgrid-cols-1md:grid-cols-2gap-4"><div><labelclassName="blocktext-smfont-mediummb-1">Zmagazynu</label><divclassName="relative"><selectrequiredvalue={form.fromWarehouseId}onChange={(e)=>setForm((f)=>({...f,fromWarehouseId:e.target.value}))}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzmagazyn</option>{warehouses.map((w)=>(<optionkey={w.warehouseId}value={w.warehouseId}>{w.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelclassName="blocktext-smfont-mediummb-1">Domagazynu</label><divclassName="relative"><selectrequiredvalue={form.toWarehouseId}onChange={(e)=>setForm((f)=>({...f,toWarehouseId:e.target.value}))}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzmagazyn</option>{warehouses.map((w)=>(<optionkey={w.warehouseId}value={w.warehouseId}>{w.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelclassName="blocktext-smfont-mediummb-1">Pracownik</label><divclassName="relative"><selectrequiredvalue={form.employeeId}onChange={(e)=>setForm((f)=>({...f,employeeId:e.target.value}))}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzpracownika</option>{employees.map((e)=>(<optionkey={e.employeeId}value={e.employeeId}>{e.name}{e.surname}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div></div><divclassName="space-y-3"><labelclassName="text-smfont-medium">Produktyorazichilość</label>{form.items.map((item,idx)=>(<divkey={idx}className="gridgrid-cols-5gap-2items-end"><divclassName="col-span-3"><divclassName="relative"><selectrequiredvalue={item.productId}onChange={(e)=>handleItemChange(idx,"productId",e.target.value)}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzprodukt</option>{products.map((p)=>(<optionkey={p.productId}value={p.productId}>{p.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><inputtype="number"min="1"requiredplaceholder="Ilość"value={item.quantity}onChange={(e)=>handleItemChange(idx,"quantity",e.target.value)}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"/></div><buttontype="button"onClick={()=>handleRemoveRow(idx)}className="flexjustify-centeritems-centertext-red-500hover:text-red-700h-fullcursor-pointertransitionduration-200"><FaTrash/></button></div>))}<buttontype="button"onClick={handleAddRow}className="flexitems-centertext-pink-600hover:text-pink-800mt-4transitionduration-200"><FaPlusclassName="mr-1"/>Dodajnastępnyprodukt</button></div><divclassName="pt-4border-t"><buttontype="submit"disabled={status==="loading"}className="w-fullpy-3bg-pink-500hover:bg-pink-600text-whiterounded-lgtransitiondisabled:opacity-50duration-200">{status==="loading"?(<Spinnercolor="white"/>):("Przenieśtowar")}</button></div></form></div>);};exportdefaultTransferPage;// \components\Layout\DefaultRedirect.jsximport{useSelector}from"react-redux";import{Navigate}from"react-router-dom";constDefaultRedirect=()=>{constloggedIn=useSelector((state)=>state.auth.loggedIn);returnloggedIn?(<Navigateto="/"replace/>):(<Navigateto="/login"replace/>);};exportdefaultDefaultRedirect;// \components\Layout\Layout.jsximportSidebarfrom"./Sidebar";importNavbarfrom"./Navbar";constLayout=({children})=>(<divclassName="flex"><Sidebar/><divclassName="flex-1ml-64"><Navbar/><mainclassName="p-6">{children}</main></div></div>);exportdefaultLayout;// \components\Layout\Navbar.jsximport{useDispatch,useSelector}from"react-redux";import{useLocation,useNavigate}from"react-router-dom";import{logout}from"../../features/auth/authSlice";import{fetchWarehouses}from"../../features/warehouses/warehousesSlice";import{setSelectedWarehouse}from"../../features/selectedWarehouse/selectedWarehouseSlice";import{FaChevronDown,FaSignOutAlt}from"react-icons/fa";import{useEffect}from"react";consttitles={"/":"Panelgłówny","/products":"Produkty","/products/new":"Nowyprodukt","/categories":"Kategorie","/warehouses":"Magazyny","/warehouses/new":"Nowymagazyn","/inventory/receive":"Przyjęcie","/inventory/transfer":"Przeniesienie","/inventory/delivery":"Wydanie","/transactions":"Transakcje","/clients":"Klienci","/clients/new":"Nowyklient","/suppliers":"Dostawcy","/suppliers/new":"Nowydostawca","/employees":"Pracownicy","/employees/new":"Nowypracownik","/geography":"Geografia",};exportdefaultfunctionNavbar(){constdispatch=useDispatch();constnavigate=useNavigate();const{pathname}=useLocation();const{list:warehouses}=useSelector((s)=>s.warehouses);constselectedWarehouse=useSelector((s)=>s.selectedWarehouse);useEffect(()=>{dispatch(fetchWarehouses());},[dispatch]);consthandleLogout=()=>{dispatch(logout());navigate("/login");};consttitle=titles[pathname]||pathname.split("/").filter(Boolean).join("").replace(/\b\w/g,(c)=>c.toUpperCase());return(<headerclassName="flexitems-centerjustify-betweenbg-whiteshadowp-4"><divclassName="flexitems-center"><h1className="text-2xlfont-semiboldtext-gray-800">{title}</h1></div>{["/products","/","/transactions","/employees","/suppliers","/clients",].includes(pathname)&&(<divclassName="relativemx-4"><selectclassName="blockappearance-nonew-80bg-whiteborderborder-gray-300text-gray-700py-2px-3pr-8rounded-mdleading-tightfocus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"value={selectedWarehouse??""}onChange={(e)=>{constval=e.target.value;dispatch(setSelectedWarehouse(val===""?null:Number(val)));}}><optionvalue="">WszystkieMagazyny</option>{warehouses.map((w)=>(<optionkey={w.warehouseId}value={w.warehouseId}>{w.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div>)}<divclassName="flexitems-center"><buttonclassName="flexitems-centertext-gray-600hover:text-pink-800transition-colorsduration-300cursor-pointer"onClick={handleLogout}><FaSignOutAltclassName="mr-2"/>WylogujSię</button></div></header>);}// \components\Layout\ProtectedRoute.jsximport{Navigate}from"react-router-dom";import{useSelector}from"react-redux";constProtectedRoute=({children})=>{constloggedIn=useSelector((state)=>state.auth.loggedIn);returnloggedIn?children:<Navigateto="/login"/>;};exportdefaultProtectedRoute;// \components\Layout\Sidebar.jsximportLogofrom"../../assets/images/logo.png";importSidebarLinkfrom"./SidebarLink";import{AiOutlineHome}from"react-icons/ai";import{FaBoxOpen,FaTags,FaWarehouse,FaTruck,FaExchangeAlt,FaClipboardList,FaUsers,FaUserTie,FaUserFriends,FaGlobe,}from"react-icons/fa";exportdefaultfunctionSidebar(){return(<asideclassName="w-64h-screenbg-whiteshadow-lgp-4fixed"><navclassName="flexflex-colspace-y-2"><divclassName="flexitems-centermb-4"><imgsrc={Logo}alt="Logo"className="h-10w-10rounded-fullmr-2"/><spanclassName="text-xlfont-bold">BD2gr.03</span></div><SidebarLinkto="/"endicon={AiOutlineHome}label="Panelgłówny"/><SidebarLinkto="/products"icon={FaBoxOpen}label="Produkty"/><SidebarLinkto="/categories"icon={FaTags}label="Kategorie"/><SidebarLinkto="/warehouses"icon={FaWarehouse}label="Magazyny"/><SidebarLinkto="/transactions"icon={FaClipboardList}label="Transakcje"/><SidebarLinkto="/clients"icon={FaUsers}label="Klienci"/><SidebarLinkto="/suppliers"icon={FaUserTie}label="Dostawcy"/><SidebarLinkto="/employees"icon={FaUserFriends}label="Pracownicy"/><SidebarLinkto="/geography"icon={FaGlobe}label="Geografia"/><divclassName="mt-4border-tpt-4"><pclassName="text-xsuppercasetext-gray-500px-2mb-2">Magazyn</p><SidebarLinkto="/inventory/receive"icon={FaTruck}label="Przyjęcie"/><SidebarLinkto="/inventory/transfer"icon={FaExchangeAlt}label="Przeniesienie"/><SidebarLinkto="/inventory/delivery"icon={FaTruck}label="Wydanie"/></div></nav></aside>);}// \components\Layout\SidebarLink.jsximport{NavLink}from"react-router-dom";constSidebarLink=({to,icon:Icon,label})=>{return(<NavLinkto={to}className={({isActive})=>`flexitems-centerp-2border-2rounded-lgtransition-colorsduration-300${isActive?"bg-pink-100text-pink-800border-pink-300":"text-gray-600border-transparenthover:bg-pink-100hover:text-pink-800hover:border-pink-300"}`}><IconclassName="mr-4text-xl"/>{label}</NavLink>);};exportdefaultSidebarLink;// \components\products\ProductDetail.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{useParams,Link}from"react-router-dom";import{fetchProductById}from"../../features/products/productsSlice";import{format}from"date-fns";import{FaEdit,FaChevronLeft,FaEye}from"react-icons/fa";import{currencyFormatter,dateFormatter,numberFormatter,}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";constProductDetail=()=>{const{id}=useParams();constdispatch=useDispatch();const{current:product,status,error,}=useSelector((state)=>state.products);const[transactionsShown,setTransactionsShown]=useState(25);useEffect(()=>{dispatch(fetchProductById(id));},[dispatch,id]);if(status==="loading"||status==="idle"){return<Spinner/>;}if(status==="failed"){return<pclassName="text-red-500">Błąd:{error}</p>;}if(!product){return<pclassName="text-red-500">Nieznalezionoproduktu.</p>;}const{name,description,unitPrice,unitSize,categoryName,categoryId,inventory,transactions,}=product;return(<divclassName="max-w-4xlmx-autobg-whitep-6rounded-lgshadowspace-y-6"><divclassName="flexitems-centerjustify-between"><Linkto="/products"className="text-gray-600hover:text-pink-500transitionduration-200"><FaChevronLeftclassName="inlinemr-2"/>PowrótdoProduktów</Link><Linkto={`/products/${id}/edit`}className="flexitems-centerbg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionduration-200"><FaEditclassName="mr-2"/>EdytujProdukt</Link></div><h1className="text-3xlfont-semiboldtext-gray-800">{name}</h1><pclassName="text-gray-700whitespace-pre-line">{description}</p><p><strong>Kategoria:</strong><LinkclassName="hover:underlinetext-pink-500"to={`/categories/${categoryId}`}>{categoryName}</Link></p><p><strong>JednostkowaCena:</strong>{currencyFormatter(unitPrice)}</p><p><strong>JednostkowyRozmiar:</strong>{numberFormatter(unitSize)}</p>{inventory&&Object.keys(inventory).length>0&&(<div><h2className="text-xlfont-semiboldmb-2">ZasobynaMagazyn</h2><divclassName="gridgrid-cols-2bg-gray-50text-xsfont-mediumtext-gray-500uppercasep-2rounded-t-lg"><div>IDMagazynu</div><divclassName="text-right">Ilość</div></div><divclassName="divide-ydivide-gray-200">{Object.entries(inventory).map(([warehouseId,qty])=>(<divkey={warehouseId}className="gridgrid-cols-2p-2text-smtext-gray-700"><divclassName="text-pink-600"><Linkto={`/warehouses/${warehouseId}`}className="hover:underline">{warehouseId}</Link></div><divclassName="text-right">{numberFormatter(qty)}</div></div>))}</div></div>)}{transactions.length===0?(<pclassName="text-red-500">Braktransakcji.</p>):(<div><h2className="text-xlfont-semiboldmb-2">OstatnieTransakcje</h2><divclassName="gridgrid-cols-7bg-gray-50text-xsfont-mediumtext-gray-500uppercasep-2rounded-t-lg"><div>Data</div><div>Przezpracownika</div><div>Typ</div><divclassName="text-right">Ilość</div><divclassName="text-right">Cena(szt.)</div><divclassName="text-right">Łącznie</div><divclassName="text-center">Detale</div></div><divclassName="divide-ydivide-gray-200">{[...transactions].reverse().slice(0,transactionsShown).map((tx)=>(<divkey={tx.transactionId}className="gridgrid-cols-7items-centerp-2text-smtext-gray-700"><div>{dateFormatter(tx.date)}</div><Linkto={`/employees/${tx.employeeId}`}className="text-pink-500hover:underline">{tx.employeeName}</Link><div>{tx.type.toLowerCase().replace(/_/g,"").replace(/\b\w/g,(c)=>c.toUpperCase())}</div><divclassName="text-right">{numberFormatter(tx.quantity)}</div><divclassName="text-right">{currencyFormatter(tx.price)}</div><divclassName="text-right">{currencyFormatter(tx.price*tx.quantity)}</div><divclassName="flexjustify-centertext-gray-600"><Linkto={`/transactions/${tx.transactionId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div>{transactions.length>transactionsShown&&(<buttononClick={()=>setTransactionsShown((prev)=>prev+25)}className="mt-4bg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionmx-autoblockduration-200">Pokażwięcej</button>)}</div>)}</div>);};exportdefaultProductDetail;// \components\products\ProductForm.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{Link,useNavigate,useParams}from"react-router-dom";import{fetchProductById,createProduct,updateProduct,}from"../../features/products/productsSlice";import{fetchCategories}from"../../features/categories/categoriesSlice";import{FaChevronDown,FaChevronLeft}from"react-icons/fa";importSpinnerfrom"../helper/Spinner";constProductForm=()=>{const{id}=useParams();constisEdit=Boolean(id);constdispatch=useDispatch();constnavigate=useNavigate();const{current:product,status:prodStatus,error:prodError,formStatus,}=useSelector((state)=>state.products);const{list:categories}=useSelector((state)=>state.categories);const[form,setForm]=useState({name:"",description:"",unitPrice:"",unitSize:"",categoryId:"",});useEffect(()=>{dispatch(fetchCategories());if(isEdit)dispatch(fetchProductById(id));},[dispatch,id,isEdit]);useEffect(()=>{if(isEdit&&product){setForm({name:product.name||"",description:product.description||"",unitPrice:product.unitPrice?.toString()||"",unitSize:product.unitSize?.toString()||"",categoryId:product.categoryId?.toString()||"",});}},[product,isEdit]);consthandleChange=(e)=>{const{name,value}=e.target;setForm((f)=>({...f,[name]:value}));};consthandleSubmit=async(e)=>{e.preventDefault();constpayload={...form,unitPrice:parseFloat(form.unitPrice),unitSize:parseFloat(form.unitSize),categoryId:parseInt(form.categoryId,10),};letresult;if(isEdit){result=awaitdispatch(updateProduct({id:parseInt(id,10),data:payload}));}else{result=awaitdispatch(createProduct(payload));}if(result.meta.requestStatus==="fulfilled"){navigate("/products");}};if((isEdit&&prodStatus==="loading")||prodStatus==="idle"){return<Spinner/>;}if(prodStatus==="failed"){return<pclassName="text-red-500">Błąd:{prodError}</p>;}if(isEdit&&!product){return<pclassName="text-red-500">Nieznalezionoproduktu.</p>;}return(<divclassName="max-w-lgmx-autobg-whitep-6rounded-lgshadow"><Linkto="/products"className="flexitems-centertext-gray-600hover:text-pink-500mb-6transitionduration-200"><FaChevronLeftclassName="inlinemr-2"/>PowrótdoProduktów</Link><h1className="text-2xlfont-semiboldmb-4">{isEdit?"EdytujProdukt":"NowyProdukt"}</h1>{formStatus==="failed"&&(<pclassName="text-red-500mb-4">Błąd:{prodError}</p>)}<formonSubmit={handleSubmit}className="space-y-4"><div><labelhtmlFor="name"className="blocktext-smfont-medium">Nazwa</label><inputid="name"name="name"value={form.name}onChange={handleChange}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"required/></div><div><labelhtmlFor="description"className="blocktext-smfont-medium">Opis</label><textareaid="description"name="description"value={form.description}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div><divclassName="gridgrid-cols-2gap-4"><div><labelhtmlFor="unitPrice"className="blocktext-smfont-medium">Cenajednostkowa</label><inputid="unitPrice"name="unitPrice"type="number"step="0.01"value={form.unitPrice}onChange={handleChange}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"required/></div><div><labelhtmlFor="unitSize"className="blocktext-smfont-medium">Rozmiarjednostkowy</label><inputid="unitSize"name="unitSize"type="number"step="0.01"value={form.unitSize}onChange={handleChange}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"required/></div></div><div><labelhtmlFor="categoryId"className="blocktext-smfont-medium">Kategoria</label><divclassName="relative"><selectid="categoryId"name="categoryId"value={form.categoryId}onChange={handleChange}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"required><optionvalue="">Wybierzkategorię</option>{categories.map((cat)=>(<optionkey={cat.categoryId}value={cat.categoryId}>{cat.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><buttontype="submit"className="w-fullpy-3bg-pink-500hover:bg-pink-600text-whiterounded-lgtransitioncursor-pointerduration-200">{formStatus==="loading"?(<Spinnercolor="white"/>):isEdit?("AktualizujProdukt"):("StwórzProdukt")}</button></form></div>);};exportdefaultProductForm;// \components\products\ProductList.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{Link}from"react-router-dom";import{fetchProducts,deleteProduct,}from"../../features/products/productsSlice";import{fetchCategories}from"../../features/categories/categoriesSlice";import{FaEye,FaTrash,FaEdit}from"react-icons/fa";import{currencyFormatter,numberFormatter}from"../../utils/helpers";importPaginationfrom"../helper/Pagination";importNumberInputfrom"../helper/NumberInput";importTextInputfrom"../helper/TextInput";importSelectInputfrom"../helper/SelectInput";importSpinnerfrom"../helper/Spinner";importuseDebouncefrom"../../hooks/useDebounce";constProductList=()=>{constdispatch=useDispatch();const{list:products,status,error,}=useSelector((state)=>state.products);const{list:categories}=useSelector((state)=>state.categories);constselectedWarehouse=useSelector((state)=>state.selectedWarehouse);const[searchTerm,setSearchTerm]=useState("");const[categoryFilter,setCategoryFilter]=useState("");const[minPrice,setMinPrice]=useState("");const[maxPrice,setMaxPrice]=useState("");const[minSize,setMinSize]=useState("");const[maxSize,setMaxSize]=useState("");const[minInventory,setMinInventory]=useState("");const[maxInventory,setMaxInventory]=useState("");const[minTransactions,setMinTransactions]=useState("");const[maxTransactions,setMaxTransactions]=useState("");constdebouncedSearchTerm=useDebounce(searchTerm);constdebouncedMinPrice=useDebounce(minPrice);constdebouncedMaxPrice=useDebounce(maxPrice);constdebouncedMinSize=useDebounce(minSize);constdebouncedMaxSize=useDebounce(maxSize);constdebouncedMinInventory=useDebounce(minInventory);constdebouncedMaxInventory=useDebounce(maxInventory);constdebouncedMinTransactions=useDebounce(minTransactions);constdebouncedMaxTransactions=useDebounce(maxTransactions);const[page,setPage]=useState(1);const[sortOption,setSortOption]=useState("");useEffect(()=>{dispatch(fetchCategories());},[dispatch]);useEffect(()=>{dispatch(fetchProducts({name:debouncedSearchTerm||undefined,categoryId:categoryFilter||undefined,minPrice:debouncedMinPrice?parseFloat(debouncedMinPrice):undefined,maxPrice:debouncedMaxPrice?parseFloat(debouncedMaxPrice):undefined,minSize:debouncedMinSize?parseFloat(debouncedMinSize):undefined,maxSize:debouncedMaxSize?parseFloat(debouncedMaxSize):undefined,warehouseId:selectedWarehouse||undefined,minInventory:debouncedMinInventory?parseInt(debouncedMinInventory):undefined,maxInventory:debouncedMaxInventory?parseInt(debouncedMaxInventory):undefined,minTransactions:debouncedMinTransactions?parseInt(debouncedMinTransactions):undefined,maxTransactions:debouncedMaxTransactions?parseInt(debouncedMaxTransactions):undefined,page:page||1,}));},[dispatch,debouncedSearchTerm,categoryFilter,selectedWarehouse,debouncedMinPrice,debouncedMaxPrice,debouncedMinSize,debouncedMaxSize,debouncedMinInventory,debouncedMaxInventory,debouncedMinTransactions,debouncedMaxTransactions,page,]);constfiltered=[...products].sort((a,b)=>{switch(sortOption){case"name":returna.name.localeCompare(b.name);case"name-reverse":returnb.name.localeCompare(a.name);case"description":returna.description.localeCompare(b.description);case"description-reverse":returnb.description.localeCompare(a.description);case"category":returna.categoryName.localeCompare(b.categoryName);case"category-reverse":returnb.categoryName.localeCompare(a.categoryName);case"price":returna.unitPrice-b.unitPrice;case"price-reverse":returnb.unitPrice-a.unitPrice;case"size":returna.unitSize-b.unitSize;case"size-reverse":returnb.unitSize-a.unitSize;case"inventory":returna.inventoryCount-b.inventoryCount;case"inventory-reverse":returnb.inventoryCount-a.inventoryCount;case"transactions":returna.transactionCount-b.transactionCount;case"transactions-reverse":returnb.transactionCount-a.transactionCount;default:return0;}});consthandleDelete=(id)=>{if(window.confirm("Areyousureyouwanttodeletethisproduct?")){dispatch(deleteProduct(id));}};consttotalPages=10;console.log(products);return(<><formclassName="flexspace-x-4justify-between"><divclassName="flexflex-wrapgap-4items-end"><TextInputlabel="Nazwa"placeholder="Wyszukajponazwie..."value={searchTerm}setValue={setSearchTerm}/><SelectInputlabel="Kategoria"value={categoryFilter}setValue={setCategoryFilter}><optionvalue="">WszystkieKategorie</option>{categories.map((cat)=>(<optionkey={cat.categoryId}value={cat.categoryId}>{cat.name}</option>))}</SelectInput><NumberInputlabel="Cena(min)"placeholder="Wybierzcenę..."isMinus={true}value={minPrice}setValue={setMinPrice}/><NumberInputlabel="Cena(max)"placeholder="Wybierzcenę..."isMinus={false}value={maxPrice}setValue={setMaxPrice}/><NumberInputlabel="Wielkość(min)"placeholder="Wybierzwielkość..."isMinus={true}value={minSize}setValue={setMinSize}/><NumberInputlabel="Wielkość(max)"placeholder="Wybierzwielkość..."isMinus={false}value={maxSize}setValue={setMaxSize}/><NumberInputlabel="Stan(min)"placeholder="Wybierzstan..."isMinus={true}value={minInventory}setValue={setMinInventory}/><NumberInputlabel="Stan(max)"placeholder="Wybierzstan..."isMinus={false}value={maxInventory}setValue={setMaxInventory}/><NumberInputlabel="Transakcje(min)"placeholder="Wybierztransakcje..."isMinus={true}value={minTransactions}setValue={setMinTransactions}/><NumberInputlabel="Transakcje(max)"placeholder="Wybierztransakcje..."isMinus={false}value={maxTransactions}setValue={setMaxTransactions}/></div><SelectInputlabel="Sortowanie"value={sortOption}setValue={setSortOption}><optionvalue="">Sortujprzez</option><optionvalue="name">Nazwa(odAdoZ)</option><optionvalue="name-reverse">Nazwa(odZdoA)</option><optionvalue="capacity">Pojemność(rosnąco)</option><optionvalue="capacity-reverse">Pojemność(malejąco)</option><optionvalue="occupied">Zajęte(rosnąco)</option><optionvalue="occupied-reverse">Zajęte(malejąco)</option><optionvalue="address">Adres(odAdoZ)</option><optionvalue="address-reverse">Adres(odZdoA)</option><optionvalue="employees">Pracownicy(rosnąco)</option><optionvalue="employees-reverse">Pracownicy(malejąco)</option><optionvalue="products">Produkty(rosnąco)</option><optionvalue="products-reverse">Produkty(malejąco)</option><optionvalue="transactions">Transakcje(rosnąco)</option><optionvalue="transactions-reverse">Transakcje(malejąco)</option></SelectInput></form>{status==="loading"||status==="idle"?(<Spinner/>):status==="failed"?(<pclassName="text-red-500">Błąd:{error}</p>):filtered.length===0?(<pclassName="text-red-500">Nieznalezionoproduktu</p>):(<><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/><divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="hiddensm:gridgrid-cols-8gap-4p-4bg-gray-50text-xsfont-mediumtext-gray-500uppercasetracking-wider"><div>Nazwa</div><div>Opis</div><div>Kategoria</div><divclassName="text-right">Cena</div><divclassName="text-right">Wielkość</div><divclassName="text-right">Stan</div><divclassName="text-right">Transakcje</div><divclassName="text-center">Akcje</div></div><divclassName="divide-ydivide-gray-200">{filtered.map((product)=>(<divkey={product.productId}className="gridgrid-cols-1sm:grid-cols-8items-centergap-4p-4hover:bg-pink-50transition-colorsduration-200"><div><Linkto={`/products/${product.productId}`}className="text-pink-600hover:underlinefont-medium">{product.name}</Link></div><divclassName="text-smtext-gray-700truncate">{product.description}</div><divclassName="text-smtext-gray-700">{product.categoryName}</div><divclassName="text-smtext-gray-700text-right">{currencyFormatter(product.unitPrice)}</div><divclassName="text-smtext-gray-700text-right">{numberFormatter(product.unitSize)}</div><divclassName="text-smtext-gray-700flexitems-centerjustify-endgap-4">{product.inventoryCount<5&&(<divclassName="bg-orange-500px-4roundedtext-white">NiskiStan!</div>)}{numberFormatter(product.inventoryCount)}</div><divclassName="text-smtext-gray-700flexitems-centerjustify-endgap-4">{product.isBestseller&&(<divclassName="bg-green-500px-4roundedtext-white">Bestseller!</div>)}{numberFormatter(product.transactionCount)}</div><divclassName="flexjustify-centerspace-x-4text-gray-600"><Linkto={`/products/${product.productId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link><Linkto={`/products/${product.productId}/edit`}className="hover:text-pink-500transitionduration-200"><FaEdit/></Link><buttononClick={()=>handleDelete(product.productId)}className="hover:text-pink-500transitionduration-200cursor-pointer"><FaTrash/></button></div></div>))}</div></div><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/></>)}</>);};exportdefaultProductList;// \components\suppliers\SupplierDetail.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{useParams,Link}from"react-router-dom";import{fetchSupplierById}from"../../features/suppliers/suppliersSlice";import{FaChevronLeft,FaEye}from"react-icons/fa";import{currencyFormatter,dateFormatter,numberFormatter,}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";constSupplierDetail=()=>{const{id}=useParams();constdispatch=useDispatch();const[transactionsShown,setTransactionsShown]=useState(25);const{current:supplier,status,error,}=useSelector((state)=>state.suppliers);useEffect(()=>{dispatch(fetchSupplierById(id));},[dispatch,id]);if(status==="loading"||status==="idle"){return<Spinner/>;}if(status==="failed"){return<pclassName="text-red-500">Błąd:{error}</p>;}if(!supplier){return<pclassName="text-red-500">Nieznalezionodostawcy.</p>;}const{name,email,phoneNumber,address,history=[]}=supplier;constaddr=address.street?`${address.street}${address.streetNumber},${address.postalCode}${address.city},${address.country}`:address;return(<divclassName="space-y-6max-w-4xlmx-auto"><divclassName="bg-whitep-6rounded-lgshadowspace-y-4"><div><Linkto="/suppliers"className="text-gray-600hover:text-pink-500transitionduration-200"><FaChevronLeftclassName="inline-blockmr-2"/>WróćdoDostawców</Link></div><h1className="text-3xlfont-semiboldtext-gray-800">{name}</h1><p><strong>E-mail:</strong>{email}</p><p><strong>Nr.telefonu:</strong>{phoneNumber}</p><p><strong>Adres:</strong>{addr}</p><section><h2className="text-2xlfont-semiboldmb-4">Historiatransakcji</h2>{history.length===0?(<pclassName="text-red-500">Brakhistoriitransakcji.</p>):(<><divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="gridgrid-cols-6bg-gray-50text-xsfont-mediumtext-gray-500uppercasep-2tracking-wide"><div>Data</div><div>Typ</div><div>Opis</div><divclassName="text-right">Ilośćprzedmiotów</div><divclassName="text-right">Łącznakwota</div><divclassName="text-center">Szczegóły</div></div><divclassName="divide-ydivide-gray-200">{[...history].reverse().slice(0,transactionsShown).map((tx)=>(<divkey={tx.transactionId}className="gridgrid-cols-6items-centerp-2text-smtext-gray-700hover:bg-pink-50transition-colorsduration-200"><div>{dateFormatter(tx.date)}</div><div>{tx.type.toLowerCase().replace(/_/g,"").replace(/\b\w/g,(c)=>c.toUpperCase())}</div><divclassName="truncate">{tx.description}</div><divclassName="text-right">{numberFormatter(tx.itemsCount)}</div><divclassName="text-right">{currencyFormatter(tx.totalPrice)}</div><divclassName="flexjustify-centertext-gray-600"><Linkto={`/transactions/${tx.transactionId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div></div>{history.length>transactionsShown&&(<buttononClick={()=>setTransactionsShown((prev)=>prev+25)}className="mt-4bg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionmx-autoblock">Pokażwięcej</button>)}</>)}</section></div></div>);};exportdefaultSupplierDetail;// \components\suppliers\SupplierForm.jsximport{useState,useEffect}from"react";import{useDispatch,useSelector}from"react-redux";import{useNavigate,Link}from"react-router-dom";import{FaChevronDown,FaChevronLeft}from"react-icons/fa";import{createSupplier}from"../../features/suppliers/suppliersSlice";import{fetchRegions,fetchCountries,}from"../../features/geography/geographySlice";importSpinnerfrom"../helper/Spinner";constSupplierForm=()=>{constdispatch=useDispatch();const{regions,countries}=useSelector((state)=>state.geography);const{formStatus,error}=useSelector((state)=>state.suppliers);constnavigate=useNavigate();const[form,setForm]=useState({name:"",email:"",phoneNumber:"",regionId:"",countryId:"",city:"",postalCode:"",street:"",streetNumber:"",});useEffect(()=>{dispatch(fetchRegions());},[dispatch]);useEffect(()=>{if(form.regionId){dispatch(fetchCountries(form.regionId));}else{dispatch(fetchCountries(null));}},[dispatch,form.regionId]);consthandleChange=(e)=>{const{name,value}=e.target;setForm((prev)=>({...prev,[name]:value}));};consthandleSubmit=async(e)=>{e.preventDefault();constpayload={name:form.name,email:form.email,phoneNumber:form.phoneNumber,address:{street:form.street,streetNumber:form.streetNumber,postalCode:form.postalCode,city:form.city,countryId:Number(form.countryId),regionId:Number(form.regionId),},};constresult=awaitdispatch(createSupplier(payload));if(result.meta.requestStatus==="fulfilled"){navigate("/suppliers");}};return(<divclassName="max-w-lgmx-autobg-whitep-6rounded-lgshadow-lg"><Linkto="/suppliers"className="flexitems-centertext-gray-600hover:text-pink-500mb-6transitionduration-200"><FaChevronLeftclassName="inlinemr-2"/>PowrótdoDostawców</Link><h1className="text-3xlfont-semiboldtext-gray-800mb-6">NowyDostawca</h1>{formStatus==="failed"&&(<pclassName="text-red-500mb-4">Błąd:{error}</p>)}<formonSubmit={handleSubmit}className="space-y-5"><div><labelhtmlFor="name"className="blocktext-smfont-mediumtext-gray-700mb-1">Nazwa</label><inputtype="text"id="name"name="name"value={form.name}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="email"className="blocktext-smfont-mediumtext-gray-700mb-1">E-mail</label><inputtype="email"id="email"name="email"value={form.email}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="phoneNumber"className="blocktext-smfont-mediumtext-gray-700mb-1">Nr.telefonu</label><inputtype="tel"id="phoneNumber"name="phoneNumber"value={form.phoneNumber}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="regionId"className="blocktext-smfont-mediumtext-gray-700mb-1">Region</label><divclassName="relative"><selectid="regionId"name="regionId"value={form.regionId}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transitionappearance-none"><optionvalue="">Wybierzregion</option>{regions.map((r)=>(<optionkey={r.id}value={r.id}>{r.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelhtmlFor="countryId"className="blocktext-smfont-mediumtext-gray-700mb-1">Kraj</label><divclassName="relative"><selectid="countryId"name="countryId"value={form.countryId}onChange={handleChange}requireddisabled={!form.regionId}className="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transitionappearance-none"><optionvalue="">Wybierzregion,apotemkraj</option>{countries.map((c)=>(<optionkey={c.id}value={c.id}>{c.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelhtmlFor="city"className="blocktext-smfont-mediumtext-gray-700mb-1">Miasto</label><inputtype="text"id="city"name="city"value={form.city}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="postalCode"className="blocktext-smfont-mediumtext-gray-700mb-1">Kodpocztowy</label><inputtype="text"id="postalCode"name="postalCode"value={form.postalCode}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="street"className="blocktext-smfont-mediumtext-gray-700mb-1">Ulica</label><inputtype="text"id="street"name="street"value={form.street}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><div><labelhtmlFor="streetNumber"className="blocktext-smfont-mediumtext-gray-700mb-1">Numerdomu</label><inputtype="number"id="streetNumber"name="streetNumber"value={form.streetNumber}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-4py-2focus:outline-nonefocus:ring-1focus:ring-pink-500transition"/></div><buttontype="submit"className="w-fullpy-3bg-pink-500hover:bg-pink-600text-whiterounded-lgtransitioncursor-pointerduration-200">{formStatus==="loading"?(<Spinnercolor="white"/>):("Stwórzdostawcę")}</button></form></div>);};exportdefaultSupplierForm;// \components\suppliers\SupplierList.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{Link}from"react-router-dom";import{fetchSuppliers}from"../../features/suppliers/suppliersSlice";import{FaEye,FaChevronDown}from"react-icons/fa";importTextInputfrom"../helper/TextInput";importSelectInputfrom"../helper/SelectInput";importNumberInputfrom"../helper/NumberInput";import{fetchRegions}from"../../features/geography/geographySlice";importPaginationfrom"../helper/Pagination";import{numberFormatter}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";importuseDebouncefrom"../../hooks/useDebounce";constSupplierList=()=>{constdispatch=useDispatch();const{list:data,status,error}=useSelector((state)=>state.suppliers);const{content:suppliers,totalPages}=data;const{regions}=useSelector((state)=>state.geography);const[searchTerm,setSearchTerm]=useState("");const[selectedRegion,setSelectedRegion]=useState("");const[minTransactions,setMinTransactions]=useState("");const[maxTransactions,setMaxTransactions]=useState("");constdebouncedSearchTerm=useDebounce(searchTerm);constdebouncedMinTransactions=useDebounce(minTransactions);constdebouncedMaxTransactions=useDebounce(maxTransactions);const[sortOption,setSortOption]=useState("");const[page,setPage]=useState(1);constselectedWarehouse=useSelector((state)=>state.selectedWarehouse);useEffect(()=>{dispatch(fetchSuppliers({name:debouncedSearchTerm||undefined,regionId:selectedRegion||undefined,minTransactions:debouncedMinTransactions?parseInt(debouncedMinTransactions):undefined,maxTransactions:debouncedMaxTransactions?parseInt(debouncedMaxTransactions):undefined,warehouseId:selectedWarehouse||undefined,page:page||1,}));},[dispatch,debouncedSearchTerm,selectedRegion,debouncedMinTransactions,debouncedMaxTransactions,selectedWarehouse,page,]);useEffect(()=>{dispatch(fetchRegions());},[dispatch]);if(!suppliers){return<Spinner/>;}constfiltered=[...suppliers].sort((a,b)=>{switch(sortOption){case"name":returna.name.localeCompare(b.name);case"name-reverse":returnb.name.localeCompare(a.name);case"email":returna.email.localeCompare(b.email);case"email-reverse":returnb.email.localeCompare(a.email);case"phone":returna.phoneNumber.localeCompare(b.phoneNumber);case"phone-reverse":returnb.phoneNumber.localeCompare(a.phoneNumber);case"address":returna.address.localeCompare(b.address);case"address-reverse":returnb.address.localeCompare(a.address);case"transactions":returna.transactionsCount-b.transactionsCount;case"transactions-reverse":returnb.transactionsCount-a.transactionsCount;default:return0;}});return(<><formclassName="flexjustify-betweenitems-centerspace-x-4"><divclassName="flexjustify-betweenitems-centerspace-x-4"><TextInputlabel="Nazwa"placeholder="Szukajklientów..."value={searchTerm}setValue={setSearchTerm}/><SelectInputlabel="Region"value={selectedRegion}setValue={setSelectedRegion}><optionvalue="">WszystkieRegiony</option>{regions.map((reg)=>(<optionkey={reg.id}value={reg.id}>{reg.name}</option>))}</SelectInput><NumberInputlabel="Transakcje(min)"placeholder="Wybierztransakcje..."isMinus={true}value={minTransactions}setValue={setMinTransactions}/><NumberInputlabel="Transakcje(max)"placeholder="Wybierztransakcje..."isMinus={false}value={maxTransactions}setValue={setMaxTransactions}/></div><div><labelclassName="blocktext-smfont-medium">Sortowanie</label><divclassName="relative"><selectclassName="borderappearance-noneborder-gray-300rounded-lgpx-3py-2pr-12focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"value={sortOption}onChange={(e)=>setSortOption(e.target.value)}><optionvalue="">Sortujprzez</option><optionvalue="name">Nazwa(odAdoZ)</option><optionvalue="name-reverse">Nazwa(odZdoA)</option><optionvalue="email">E-mail(odAdoZ)</option><optionvalue="email-reverse">E-mail(odZdoA)</option><optionvalue="phone">Nr.telefonu(rosnąco)</option><optionvalue="phone-reverse">Nr.telefonu(malejąco)</option><optionvalue="address">Adres(odAdoZ)</option><optionvalue="address-reverse">Adres(odZdoA)</option><optionvalue="transactions">Liczbatransakcji(rosnąco)</option><optionvalue="transactions-reverse">Liczbatransakcji(malejąco)</option></select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div></form>{status==="loading"||status==="idle"?(<Spinner/>):status==="failed"?(<pclassName="text-red-500">Błąd:{error}</p>):filtered.length===0?(<pclassName="text-red-500">Nieznalezionodostawcy</p>):(<><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/><divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="hiddensm:gridgrid-cols-6gap-4p-4bg-gray-50text-xsfont-mediumtext-gray-500uppercasetracking-wider"><div>Nazwa</div><div>E-mail</div><div>Nr.telefonu</div><div>Adres</div><divclassName="text-right">Liczbatransakcji</div><divclassName="text-center">Akcje</div></div><divclassName="divide-ydivide-gray-200">{filtered.map((sup)=>(<divkey={sup.supplierId}className="gridgrid-cols-1sm:grid-cols-6items-centergap-4p-4hover:bg-pink-50transition-colorsduration-200"><divclassName="font-mediumtext-pink-600"><Linkto={`/suppliers/${sup.supplierId}`}className="hover:underline">{sup.name}</Link></div><divclassName="text-smtext-gray-700">{sup.email}</div><divclassName="text-smtext-gray-700">{sup.phoneNumber}</div><divclassName="text-smtext-gray-700">{typeofsup.address==="string"?sup.address:`${sup.address.street}${sup.address.streetNumber},${sup.address.postalCode}${sup.address.city},${sup.address.country}`}</div><divclassName="text-smtext-gray-700text-right">{numberFormatter(sup.transactionsCount)}</div><divclassName="flexjustify-centertext-gray-600"><Linkto={`/suppliers/${sup.supplierId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div></div><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/></>)}</>);};exportdefaultSupplierList;// \components\transactions\TransactionDetail.jsximport{useEffect}from"react";import{useDispatch,useSelector}from"react-redux";import{useParams,Link}from"react-router-dom";import{fetchTransactionById}from"../../features/transactions/transactionsSlice";import{FaChevronLeft}from"react-icons/fa";import{format}from"date-fns";import{currencyFormatter,numberFormatter}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";constTransactionDetail=()=>{const{id}=useParams();constdispatch=useDispatch();const{current:tx,status,error,}=useSelector((state)=>state.transactions);useEffect(()=>{dispatch(fetchTransactionById(id));},[dispatch,id]);if(status==="loading"||status==="idle"){return<Spinner/>;}if(status==="failed"){return<pclassName="text-red-500">Błąd:{error}</p>;}if(!tx){return<pclassName="text-red-500">Nieznalezionotransakcji.</p>;}const{transactionId,date,description,type,employeeId,fromWarehouseId,toWarehouseId,clientId,supplierId,products,supplierName,fromWarehouseName,toWarehouseName,employeeName,clientName,}=tx;return(<divclassName="max-w-4xlmx-autobg-whitep-6rounded-lgshadowspace-y-6"><Linkto="/transactions"className="text-gray-600hover:text-pink-500transitionduration-200"><FaChevronLeftclassName="inline-blockmr-2"/>PowrótdoTransakcji</Link><h1className="text-3xlfont-semiboldmt-4">Transakcja#{transactionId}</h1><divclassName="gridgrid-cols-1md:grid-cols-2gap-4"><div><strong>Data:</strong>{format(newDate(date),"yyyy-MM-dd")}</div><div><strong>Typ:</strong>{""}{type.toLowerCase().replace(/_/g,"").replace(/\b\w/g,(c)=>c.toUpperCase())}</div><div><strong>Opis:</strong>{description}</div><div><strong>Wykonanaprzez:</strong>{""}<Linkto={`/employees/${employeeId}`}className="text-pink-600hover:underline">{employeeName}</Link></div>{supplierId&&(<div><strong>Dostawca:</strong>{""}<Linkto={`/suppliers/${supplierId}`}className="text-pink-600hover:underline">{supplierName}</Link></div>)}{clientId&&(<div><strong>Klient:</strong>{""}<Linkto={`/clients/${clientId}`}className="text-pink-600hover:underline">{clientName}</Link></div>)}{fromWarehouseId&&(<div><strong>Zmagazynu:</strong>{""}<Linkto={`/warehouses/${fromWarehouseId}`}className="text-pink-600hover:underline">{fromWarehouseName}</Link></div>)}{toWarehouseId&&(<div><strong>Domagazynu:</strong>{""}<Linkto={`/warehouses/${toWarehouseId}`}className="text-pink-600hover:underline">{toWarehouseName}</Link></div>)}</div>{products.length===0?(<pclassName="text-red-500">Brakproduktów</p>):(<section><h2className="text-xlfont-semiboldmb-4">Produkty</h2><divclassName="bg-gray-50gridgrid-cols-5p-2text-xsuppercasefont-mediumtext-gray-500rounded-t-lg"><div>Produkt</div><divclassName="text-right">Ilość</div><divclassName="text-right">Cenajednostkowa</div><divclassName="text-right">Kategoria</div><divclassName="text-right">Łącznie</div></div><divclassName="divide-ydivide-gray-200">{products.map((p)=>(<divkey={p.productId}className="gridgrid-cols-5p-2text-smtext-gray-700items-center"><div><Linkto={`/products/${p.productId}`}className="text-pink-600hover:underline">{p.name}</Link></div><divclassName="text-right">{numberFormatter(p.quantity)}</div><divclassName="text-right">{currencyFormatter(p.unitPrice)}</div><divclassName="text-right">{p.categoryName}</div><divclassName="text-right">{currencyFormatter(p.quantity*p.unitPrice)}</div></div>))}</div><divclassName="text-rightp-2font-bold">{currencyFormatter(products.reduce((acc,p)=>acc+p.quantity*p.unitPrice,0))}</div></section>)}</div>);};exportdefaultTransactionDetail;// \components\transactions\TransactionList.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{Link}from"react-router-dom";import{fetchTransactions}from"../../features/transactions/transactionsSlice";import{FaEye}from"react-icons/fa";import{format}from"date-fns";import{currencyFormatter,numberFormatter}from"../../utils/helpers";importDateInputfrom"../helper/DateInput";importSelectInputfrom"../helper/SelectInput";importNumberInputfrom"../helper/NumberInput";importPaginationfrom"../helper/Pagination";importSpinnerfrom"../helper/Spinner";importuseDebouncefrom"../../hooks/useDebounce";constTransactionList=()=>{constdispatch=useDispatch();const{list:data,status,error,}=useSelector((state)=>state.transactions);const{content:transactions,totalPages}=data;constselectedWarehouse=useSelector((state)=>state.selectedWarehouse);const[fromDate,setFromDate]=useState("");const[toDate,setToDate]=useState("");const[type,setType]=useState("");const[minTotalPrice,setMinTotalPrice]=useState("");const[maxTotalPrice,setMaxTotalPrice]=useState("");const[minTotalSize,setMinTotalSize]=useState("");const[maxTotalSize,setMaxTotalSize]=useState("");constdebouncedMinTotalPrice=useDebounce(minTotalPrice);constdebouncedMaxTotalPrice=useDebounce(maxTotalPrice);constdebouncedMinTotalSize=useDebounce(minTotalSize);constdebouncedMaxTotalSize=useDebounce(maxTotalSize);const[page,setPage]=useState(1);const[sortOption,setSortOption]=useState("");useEffect(()=>{dispatch(fetchTransactions({fromDate:fromDate||undefined,toDate:toDate||undefined,type:type||undefined,minTotalPrice:debouncedMinTotalPrice?parseFloat(debouncedMinTotalPrice):undefined,maxTotalPrice:debouncedMaxTotalPrice?parseFloat(debouncedMaxTotalPrice):undefined,minTotalSize:debouncedMinTotalSize?parseFloat(debouncedMinTotalSize):undefined,maxTotalSize:debouncedMaxTotalSize?parseFloat(debouncedMaxTotalSize):undefined,page:page||1,warehouseId:selectedWarehouse||undefined,}));},[dispatch,selectedWarehouse,page,fromDate,toDate,type,debouncedMinTotalPrice,debouncedMaxTotalPrice,debouncedMinTotalSize,debouncedMaxTotalSize,]);if(!transactions){return<Spinner/>;}constfiltered=[...transactions].sort((a,b)=>{switch(sortOption){case"date":returnnewDate(a.date)-newDate(b.date);case"date-reverse":returnnewDate(b.date)-newDate(a.date);case"description":returna.description.localeCompare(b.description);case"description-reverse":returnb.description.localeCompare(a.description);case"type":returna.type.localeCompare(b.type);case"type-reverse":returnb.type.localeCompare(a.type);//case"from"://return(a.fromWarehouseId||"").localeCompare(b.fromWarehouseId||"");//case"from-reverse"://return(b.fromWarehouseId||"").localeCompare(a.fromWarehouseId||"");//case"to"://return(//a.toWarehouseId||//a.clientId||//a.supplierId||//""//).localeCompare(b.toWarehouseId||b.clientId||b.supplierId||"");//case"to-reverse"://return(//b.toWarehouseId||//b.clientId||//b.supplierId||//""//).localeCompare(a.toWarehouseId||a.clientId||a.supplierId||"");case"total":returna.totalPrice-b.totalPrice;case"total-reverse":returnb.totalPrice-a.totalPrice;case"size":returna.totalSize-b.totalSize;case"size-reverse":returnb.totalSize-a.totalSize;default:return0;}});return(<><formclassName="flexjustify-betweenspace-x-4"><divclassName="flexflex-wrapgap-4items-end"><DateInputlabel="Oddnia"value={fromDate}setValue={setFromDate}/><DateInputlabel="Dodnia"value={toDate}setValue={setToDate}/><SelectInputlabel="Typtransakcji"value={type}setValue={setType}><optionvalue="">Wszystkie</option><optionvalue="SUPPLIER_TO_WAREHOUSE">SuppliertoWarehouse</option><optionvalue="WAREHOUSE_TO_CUSTOMER">WarehousetoCustomer</option><optionvalue="WAREHOUSE_TO_WAREHOUSE">WarehousetoWarehouse</option></SelectInput><NumberInputlabel="Łącznakwota(min)"isMinus={true}placeholder="Wpiszkwotę..."value={minTotalPrice}setValue={setMinTotalPrice}/><NumberInputlabel="Łącznakwota(max)"isMinus={false}placeholder="Wpiszkwotę..."value={maxTotalPrice}setValue={setMaxTotalPrice}/><NumberInputlabel="Łącznyrozmiar(min)"isMinus={true}placeholder="Wpiszkwotę..."value={minTotalSize}setValue={setMinTotalSize}/><NumberInputlabel="Łącznyrozmiar(max)"isMinus={false}placeholder="Wpiszkwotę..."value={maxTotalSize}setValue={setMaxTotalSize}/></div><SelectInputlabel="Sortowanie"value={sortOption}setValue={setSortOption}><optionvalue="">Sortujprzez</option><optionvalue="date">Data(odnajstarszej)</option><optionvalue="date-reverse">Data(odnajmłodszej)</option><optionvalue="description">Opis(odAdoZ)</option><optionvalue="description-reverse">Opis(odZdoA)</option><optionvalue="type">Typ(odAdoZ)</option><optionvalue="type-reverse">Typ(odZdoA)</option><optionvalue="from">ZMiejsca(odAdoZ)</option><optionvalue="from-reverse">ZMiejsca(odZdoA)</option><optionvalue="to">DoMiejsca(odAdoZ)</option><optionvalue="to-reverse">DoMiejsca(odZdoA)</option><optionvalue="total">Łącznie(rosnąco)</option><optionvalue="total-reverse">Łącznie(malejąco)</option></SelectInput></form>{status==="loading"||status==="idle"?(<Spinner/>):status==="failed"?(<pclassName="text-red-500">Błąd:{error}</p>):filtered.length===0?(<pclassName="text-red-500">Nieznalezionotransakcji</p>):(<><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/><divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="hiddensm:gridgrid-cols-9gap-4p-4bg-gray-50text-xsfont-mediumtext-gray-500uppercasetracking-wider"><div>Data</div><div>Opis</div><div>Typ</div><div>Pracownik</div><div>Odmiejsca</div><div>Domiejsca</div><divclassName="text-right">Łącznakwota</div><divclassName="text-right">Łącznyrozmiar</div><divclassName="text-center">Akcje</div></div><divclassName="divide-ydivide-gray-200">{filtered.map((tx)=>(<divkey={tx.transactionId}className="gridgrid-cols-1sm:grid-cols-9gap-4p-4hover:bg-pink-50transition-colorsduration-200"><div>{format(newDate(tx.date),"yyyy-MM-dd")}</div><divclassName="truncate">{tx.description}</div><div>{tx.type.toLowerCase().replace(/_/g,"").replace(/\b\w/g,(c)=>c.toUpperCase())}</div><div>{tx.employeeId}</div><div>{tx.fromWarehouseId??tx.supplierId??"-"}</div><div>{tx.toWarehouseId??tx.clientId??"-"}</div><divclassName="text-right">{currencyFormatter(tx.totalPrice)}</div><divclassName="text-right">{numberFormatter(tx.totalSize)}</div><divclassName="text-gray-600flexjustify-center"><Linkto={`/transactions/${tx.transactionId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div></div><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/></>)}</>);};exportdefaultTransactionList;// \components\warehouses\WarehouseDetail.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{useParams,Link}from"react-router-dom";import{fetchWarehouseById}from"../../features/warehouses/warehousesSlice";import{ResponsiveContainer,LineChart,Line,XAxis,YAxis,Tooltip,CartesianGrid,}from"recharts";import{FaChevronLeft,FaEdit,FaEye}from"react-icons/fa";import{currencyFormatter,dateFormatter,numberFormatter,}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";constWarehouseDetail=()=>{const{id}=useParams();constdispatch=useDispatch();const[employeesShown,setEmployeesShown]=useState(25);const[productsShown,setProductsShown]=useState(25);const[transactionsShown,setTransactionsShown]=useState(25);const{current:warehouse,status,error,}=useSelector((state)=>state.warehouses);useEffect(()=>{dispatch(fetchWarehouseById(id));},[dispatch,id]);if(status==="loading"||status==="idle"){return<Spinner/>;}if(status==="failed"){return<pclassName="text-red-500">Błąd:{error}</p>;}if(!warehouse){return<pclassName="text-red-500">Nieznalezionomagazynu.</p>;}const{name,capacity,occupiedCapacity,address,employees,products,transactions,occupancyHistory,totalItems,totalValue,}=warehouse;return(<divclassName="space-y-6max-w-6xlmx-auto"><divclassName="flexitems-centerjustify-between"><Linkto="/warehouses"className="text-gray-600hover:text-pink-500transitionduration-200"><FaChevronLeftclassName="inlinemr-2"/>PowrótdoMagazynów</Link><Linkto={`/warehouses/${id}/edit`}className="flexitems-centerbg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionduration-200"><FaEditclassName="mr-2"/>EdytujMagazyn</Link></div><divclassName="bg-whiterounded-lgshadowp-6gridgrid-cols-1md:grid-cols-3gap-6"><div><h2className="text-lgfont-semiboldmb-2">Nazwa</h2><pclassName="text-gray-800">{name}</p></div><div><h2className="text-lgfont-semiboldmb-2">Pojemność</h2><pclassName="text-gray-800">{capacity}</p></div><div><h2className="text-lgfont-semiboldmb-2">Zajęte</h2><pclassName="text-gray-800">{occupiedCapacity}</p></div><div><h2className="text-lgfont-semiboldmb-2">Adres</h2><pclassName="text-gray-800">{address}</p></div><div><h2className="text-lgfont-semiboldmb-2">Ilośćprzedmiotów</h2><pclassName="text-gray-800">{numberFormatter(totalItems)}</p></div><div><h2className="text-lgfont-semiboldmb-2">Łącznawartość</h2><pclassName="text-gray-800">{currencyFormatter(totalValue)}</p></div></div><section><h3className="text-2xlfont-semiboldmb-4">HistoriaZajętości</h3><divclassName="bg-whiterounded-lgshadowp-6"><ResponsiveContainerwidth="100%"height={300}><LineChartdata={occupancyHistory}><CartesianGridstrokeDasharray="33"/><XAxisdataKey="date"/><YAxis/><Tooltip/><Linetype="monotone"dataKey="occupiedCapacity"stroke="#3B82F6"strokeWidth={2}/></LineChart></ResponsiveContainer></div></section><sectionclassName="gridgrid-cols-1lg:grid-cols-2gap-6"><div><h3className="text-2xlfont-semiboldmb-4">Pracownicy</h3>{employees.length===0?(<pclassName="text-red-500">Brakpracowników.</p>):(<divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="gridgrid-cols-5bg-gray-50text-xsfont-mediumtext-gray-500uppercasep-2"><div>ImięiNazwisko</div><divclassName="text-right">E-mail</div><divclassName="text-right">Nr.telefonu</div><divclassName="text-right">Stanowisko</div><divclassName="text-right">Detale</div></div><divclassName="divide-ydivide-gray-200">{employees.slice(0,employeesShown).map((emp)=>(<divkey={emp.employeeId}className="gridgrid-cols-5p-2text-smtext-gray-700"><Linkto={`/employees/${emp.employeeId}`}className="text-pink-500hover:underline">{emp.name}{emp.surname}</Link><divclassName="text-righttruncate">{emp.email}</div><divclassName="text-right">{emp.phoneNumber}</div><divclassName="text-right">{emp.position}</div><divclassName="flexjustify-endtext-gray-600"><Linkto={`/employees/${emp.employeeId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div></div>)}{employees.length>employeesShown&&(<buttononClick={()=>setEmployeesShown((prev)=>prev+25)}className="mt-4bg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionmx-autoblock">Pokażwięcej</button>)}</div><div><h3className="text-2xlfont-semiboldmb-4">Produkty</h3>{products.length===0?(<pclassName="text-red-500">Brakproduktów.</p>):(<divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="gridgrid-cols-5bg-gray-50text-xsfont-mediumtext-gray-500uppercasep-2"><div>Nazwa</div><divclassName="text-right">Ilość</div><divclassName="text-right">Cenazaszt.</div><divclassName="text-right">Wartość</div><divclassName="text-right">Detale</div></div><divclassName="divide-ydivide-gray-200">{products.slice(0,productsShown).map((pr)=>(<divkey={pr.productId}className="gridgrid-cols-5p-2text-smtext-gray-700"><Linkto={`/products/${pr.productId}`}className="text-pink-500hover:underline">{pr.name}</Link><divclassName="text-right">{numberFormatter(pr.quantity)}</div><divclassName="text-right">{currencyFormatter(pr.unitPrice)}</div><divclassName="text-right">{currencyFormatter(pr.quantity*pr.unitPrice)}</div><divclassName="flexjustify-endtext-gray-600"><Linkto={`/products/${pr.productId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div></div>)}{products.length>productsShown&&(<buttononClick={()=>setProductsShown((prev)=>prev+25)}className="mt-4bg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionmx-autoblock">Pokażwięcej</button>)}</div></section><section><h3className="text-2xlfont-semiboldmb-4">OstatnieTransakcje</h3>{transactions.length===0?(<pclassName="text-red-500">Braktransakcji.</p>):(<divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="gridgrid-cols-5bg-gray-50text-xsfont-mediumtext-gray-500uppercasep-2"><div>Data</div><div>Typ</div><divclassName="text-right">Łącznie</div><divclassName="text-right">Przezpracownika</div><divclassName="text-right">Detale</div></div><divclassName="divide-ydivide-gray-200">{[...transactions].reverse().slice(0,transactionsShown).map((tx)=>(<divkey={tx.transactionId}className="gridgrid-cols-5items-centerp-2text-smtext-gray-700"><div>{dateFormatter(tx.date)}</div><div>{tx.type.toLowerCase().replace(/_/g,"").replace(/\b\w/g,(c)=>c.toUpperCase())}</div><divclassName="text-right">{currencyFormatter(tx.totalPrice)}</div><LinkclassName="text-righttext-pink-500hover:underline"to={`/employees/${tx.employeeId}`}>{tx.employeeName}</Link><divclassName="flexjustify-endtext-gray-600"><Linkto={`/transactions/${tx.transactionId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link></div></div>))}</div></div>)}{transactions.length>transactionsShown&&(<buttononClick={()=>setTransactionsShown((prev)=>prev+25)}className="mt-4bg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransitionmx-autoblock">Pokażwięcej</button>)}</section></div>);};exportdefaultWarehouseDetail;// \components\warehouses\WarehouseForm.jsximport{useState,useEffect}from"react";import{useDispatch,useSelector}from"react-redux";import{Link,useNavigate,useParams}from"react-router-dom";import{createWarehouse,updateWarehouse,fetchWarehouseById,}from"../../features/warehouses/warehousesSlice";import{fetchRegions,fetchCountries,}from"../../features/geography/geographySlice";import{FaChevronDown,FaChevronLeft}from"react-icons/fa";importSpinnerfrom"../helper/Spinner";constWarehousesForm=()=>{const{id}=useParams();constisEdit=Boolean(id);constdispatch=useDispatch();constnavigate=useNavigate();const{current:warehouse,status,error,formStatus,}=useSelector((state)=>state.warehouses);const{regions,countries}=useSelector((state)=>state.geography);const[form,setForm]=useState({name:"",capacity:"",regionId:"",countryId:"",city:"",postalCode:"",street:"",streetNumber:"",});useEffect(()=>{dispatch(fetchRegions());},[dispatch]);useEffect(()=>{if(form.regionId){dispatch(fetchCountries(form.regionId));}else{dispatch(fetchCountries(null));}},[dispatch,form.regionId]);useEffect(()=>{if(isEdit)dispatch(fetchWarehouseById(id));},[dispatch,id,isEdit]);useEffect(()=>{if(isEdit&&warehouse){setForm({name:warehouse.name||"",capacity:warehouse.capacity?.toString()||"",regionId:warehouse.regionId?.toString()||"",countryId:warehouse.countryId?.toString()||"",city:warehouse.city||"",postalCode:warehouse.postalCode||"",street:warehouse.street||"",streetNumber:warehouse.streetNumber?.toString()||"",});}},[warehouse,isEdit]);consthandleChange=(e)=>{const{name,value}=e.target;setForm((f)=>({...f,[name]:value}));};consthandleSubmit=async(e)=>{e.preventDefault();constpayload={name:form.name,capacity:parseInt(form.capacity,10),regionId:parseInt(form.regionId,10),countryId:parseInt(form.countryId,10),city:form.city,postalCode:form.postalCode,street:form.street,streetNumber:form.streetNumber,};letresult;if(isEdit){result=awaitdispatch(updateWarehouse({id:parseInt(id,10),data:payload}));}else{result=awaitdispatch(createWarehouse(payload));}if(result.meta.requestStatus==="fulfilled"){navigate("/warehouses");}};if((isEdit&&status==="loading")||status==="idle"){return<Spinner/>;}if(status==="failed"){return<pclassName="text-red-500">Błąd:{error}</p>;}if(isEdit&&!warehouse){return<pclassName="text-red-500">Nieznalezionomagazynu.</p>;}return(<divclassName="max-w-lgmx-autobg-whitep-6rounded-lgshadow"><Linkto="/warehouses"className="flexitems-centertext-gray-600hover:text-pink-500mb-6transitionduration-200"><FaChevronLeftclassName="inlinemr-2"/>PowrótdoMagazynów</Link><h1className="text-2xlfont-semiboldmb-4">{isEdit?"EdytujMagazyn":"NowyMagazyn"}</h1>{formStatus==="failed"&&(<pclassName="text-red-500mb-4">Error:{error}</p>)}<formonSubmit={handleSubmit}className="space-y-4"><div><labelhtmlFor="name"className="blocktext-smfont-medium">Nazwa</label><inputid="name"name="name"value={form.name}onChange={handleChange}//requiredclassName="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div><div><labelhtmlFor="capacity"className="blocktext-smfont-medium">Pojemność</label><inputid="capacity"name="capacity"type="number"value={form.capacity}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div><div><labelhtmlFor="regionId"className="blocktext-smfont-medium">Region</label><divclassName="relative"><selectid="regionId"name="regionId"value={form.regionId}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzregion</option>{regions.map((r)=>(<optionkey={r.id}value={r.id}>{r.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelhtmlFor="countryId"className="blocktext-smfont-medium">Kraj</label><divclassName="relative"><selectid="countryId"name="countryId"value={form.countryId}onChange={handleChange}requireddisabled={!form.regionId}className="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300appearance-none"><optionvalue="">Wybierzregion,apotemkraj</option>{countries.map((c)=>(<optionkey={c.id}value={c.id}>{c.name}</option>))}</select><FaChevronDownclassName="pointer-events-noneabsoluteright-3top-1/2transform-translate-y-1/2text-gray-400"/></div></div><div><labelhtmlFor="city"className="blocktext-smfont-medium">Miasto</label><inputid="city"name="city"value={form.city}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div><div><labelhtmlFor="postalCode"className="blocktext-smfont-medium">Kodpocztowy</label><inputid="postalCode"name="postalCode"value={form.postalCode}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div><div><labelhtmlFor="street"className="blocktext-smfont-medium">Ulica</label><inputid="street"name="street"value={form.street}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div><div><labelhtmlFor="streetNumber"className="blocktext-smfont-medium">Numerdomu</label><inputid="streetNumber"name="streetNumber"type="number"value={form.streetNumber}onChange={handleChange}requiredclassName="w-fullborderborder-gray-300rounded-lgpx-3py-2focus:outline-nonefocus:ring-1focus:ring-pink-500focus:border-pink-500transition-colorsduration-300"/></div><buttontype="submit"className="w-fullpy-3bg-pink-500hover:bg-pink-600text-whiterounded-lgtransitioncursor-pointerduration-200">{formStatus==="loading"?(<Spinnercolor="white"/>):isEdit?("ZaktualizujMagazyn"):("StwórzMagazyn")}</button></form></div>);};exportdefaultWarehousesForm;// \components\warehouses\WarehouseList.jsximport{useEffect,useState}from"react";import{useDispatch,useSelector}from"react-redux";import{Link}from"react-router-dom";import{fetchWarehouses,deleteWarehouse,}from"../../features/warehouses/warehousesSlice";import{FaEye,FaTrash,FaEdit}from"react-icons/fa";import{fetchRegions}from"../../features/geography/geographySlice";importPaginationfrom"../helper/Pagination";importSelectInputfrom"../helper/SelectInput";importTextInputfrom"../helper/TextInput";importNumberInputfrom"../helper/NumberInput";import{numberFormatter}from"../../utils/helpers";importSpinnerfrom"../helper/Spinner";importuseDebouncefrom"../../hooks/useDebounce";constWarehouseList=()=>{constdispatch=useDispatch();const{list:warehouses,status,error,}=useSelector((state)=>state.warehouses);const{regions}=useSelector((state)=>state.geography);const[searchTerm,setSearchTerm]=useState("");const[regionFilter,setRegionFilter]=useState("");const[minCapacity,setMinCapacity]=useState("");const[maxCapacity,setMaxCapacity]=useState("");const[minOccupied,setMinOccupied]=useState("");const[maxOccupied,setMaxOccupied]=useState("");const[minEmployees,setMinEmployees]=useState("");const[maxEmployees,setMaxEmployees]=useState("");const[minProducts,setMinProducts]=useState("");const[maxProducts,setMaxProducts]=useState("");const[minTransactions,setMinTransactions]=useState("");const[maxTransactions,setMaxTransactions]=useState("");constdebouncedSearchTerm=useDebounce(searchTerm);constdebouncedMinCapacity=useDebounce(minCapacity);constdebouncedMaxCapacity=useDebounce(maxCapacity);constdebouncedMinOccupied=useDebounce(minOccupied);constdebouncedMaxOccupied=useDebounce(maxOccupied);constdebouncedMinEmployees=useDebounce(minEmployees);constdebouncedMaxEmployees=useDebounce(maxEmployees);constdebouncedMinProducts=useDebounce(minProducts);constdebouncedMaxProducts=useDebounce(maxProducts);constdebouncedMinTransactions=useDebounce(minTransactions);constdebouncedMaxTransactions=useDebounce(maxTransactions);const[sortOption,setSortOption]=useState("");const[page,setPage]=useState(1);consttotalPages=10;useEffect(()=>{dispatch(fetchRegions());},[dispatch]);useEffect(()=>{dispatch(fetchWarehouses({searchTerm:debouncedSearchTerm||undefined,regionId:regionFilter||undefined,minCapacity:debouncedMinCapacity?Number(debouncedMinCapacity):undefined,maxCapacity:debouncedMaxCapacity?Number(debouncedMaxCapacity):undefined,minOccupied:debouncedMinOccupied?Number(debouncedMinOccupied):undefined,maxOccupied:debouncedMaxOccupied?Number(debouncedMaxOccupied):undefined,minEmployees:debouncedMinEmployees?Number(debouncedMinEmployees):undefined,maxEmployees:debouncedMaxEmployees?Number(debouncedMaxEmployees):undefined,minProducts:debouncedMinProducts?Number(debouncedMinProducts):undefined,maxProducts:debouncedMaxProducts?Number(debouncedMaxProducts):undefined,minTransactions:debouncedMinTransactions?Number(debouncedMinTransactions):undefined,maxTransactions:debouncedMaxTransactions?Number(debouncedMaxTransactions):undefined,page:page||1,}));},[dispatch,debouncedSearchTerm,regionFilter,debouncedMinCapacity,debouncedMaxCapacity,debouncedMinOccupied,debouncedMaxOccupied,debouncedMinEmployees,debouncedMaxEmployees,debouncedMinProducts,debouncedMaxProducts,debouncedMinTransactions,debouncedMaxTransactions,page,]);constfiltered=[...warehouses].sort((a,b)=>{switch(sortOption){case"name":returna.name.localeCompare(b.name);case"name-reverse":returnb.name.localeCompare(a.name);case"capacity":returna.capacity-b.capacity;case"capacity-reverse":returnb.capacity-a.capacity;case"occupied":returna.occupiedCapacity-b.occupiedCapacity;case"occupied-reverse":returnb.occupiedCapacity-a.occupiedCapacity;case"address":returna.address.localeCompare(b.address);case"address-reverse":returnb.address.localeCompare(a.address);case"employees":returna.employeesCount-b.employeesCount;case"employees-reverse":returnb.employeesCount-a.employeesCount;case"products":returna.productsCount-b.productsCount;case"products-reverse":returnb.productsCount-a.productsCount;case"transactions":returna.transactionsCount-b.transactionsCount;case"transactions-reverse":returnb.transactionsCount-a.transactionsCount;default:return0;}});consthandleDelete=(id)=>{if(window.confirm("Czynapewnochceszusunąćtenmagazyn?")){dispatch(deleteWarehouse(id));}};return(<><divclassName="flexjustify-betweenspace-x-4"><divclassName="flexflex-wrapgap-4items-end"><TextInputlabel="Nazwa"placeholder="Szukajmagazynu..."value={searchTerm}setValue={setSearchTerm}/><SelectInputlabel="Region"value={regionFilter}setValue={setRegionFilter}><optionvalue="">WszystkieRegiony</option>{regions.map((reg)=>(<optionkey={reg.id}value={reg.id}>{reg.name}</option>))}</SelectInput><NumberInputlabel="Pojemność(min)"placeholder="Wybierzpojemność..."isMinus={true}value={minCapacity}setValue={setMinCapacity}/><NumberInputlabel="Pojemność(max)"placeholder="Wybierzpojemność..."isMinus={false}value={maxCapacity}setValue={setMaxCapacity}/><NumberInputlabel="Zajęte(min)"placeholder="Wybierzzajętość..."isMinus={true}value={minOccupied}setValue={setMinOccupied}/><NumberInputlabel="Zajęte(max)"placeholder="Wybierzzajętość..."isMinus={false}value={maxOccupied}setValue={setMaxOccupied}/><NumberInputlabel="Pracownicy(min)"placeholder="Wybierzpracowników..."isMinus={true}value={minEmployees}setValue={setMinEmployees}/><NumberInputlabel="Pracownicy(max)"placeholder="Wybierzpracowników..."isMinus={false}value={maxEmployees}setValue={setMaxEmployees}/><NumberInputlabel="Produkty(min)"placeholder="Wybierzprodukty..."isMinus={true}value={minProducts}setValue={setMinProducts}/><NumberInputlabel="Produkty(max)"placeholder="Wybierzprodukty..."isMinus={false}value={maxProducts}setValue={setMaxProducts}/><NumberInputlabel="Transakcje(min)"placeholder="Wybierztransakcje..."isMinus={true}value={minTransactions}setValue={setMinTransactions}/><NumberInputlabel="Transakcje(max)"placeholder="Wybierztransakcje..."isMinus={false}value={maxTransactions}setValue={setMaxTransactions}/></div><SelectInputlabel="Sortowanie"value={sortOption}setValue={setSortOption}><optionvalue="">Sortujprzez</option><optionvalue="name">Nazwa(odAdoZ)</option><optionvalue="name-reverse">Nazwa(odZdoA)</option><optionvalue="capacity">Pojemność(rosnąco)</option><optionvalue="capacity-reverse">Pojemność(malejąco)</option><optionvalue="occupied">Zajęte(rosnąco)</option><optionvalue="occupied-reverse">Zajęte(malejąco)</option><optionvalue="address">Adres(odAdoZ)</option><optionvalue="address-reverse">Adres(odZdoA)</option><optionvalue="employees">Pracownicy(rosnąco)</option><optionvalue="employees-reverse">Pracownicy(malejąco)</option><optionvalue="products">Produkty(rosnąco)</option><optionvalue="products-reverse">Produkty(malejąco)</option><optionvalue="transactions">Transakcje(rosnąco)</option><optionvalue="transactions-reverse">Transakcje(malejąco)</option></SelectInput></div>{status==="loading"||status==="idle"?(<Spinner/>):status==="failed"?(<pclassName="text-red-500">Błąd:{error}</p>):filtered.length===0?(<pclassName="text-red-500">Nieznalezionomagazynu</p>):(<><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/><divclassName="bg-whiterounded-lgshadowoverflow-auto"><divclassName="hiddensm:gridgrid-cols-8gap-4p-4bg-gray-50text-xsfont-mediumtext-gray-500uppercasetracking-wider"><div>Nazwa</div><div>Pojemność</div><div>Zajęte</div><div>Adres</div><divclassName="text-right">Pracownicy</div><divclassName="text-right">Produkty</div><divclassName="text-right">Liczbatransakcji</div><divclassName="text-center">Akcje</div></div><divclassName="divide-ydivide-gray-200">{filtered.map((wh)=>(<divkey={wh.warehouseId}className="gridgrid-cols-1sm:grid-cols-8items-centergap-4p-4hover:bg-pink-50transition-colorsduration-200"><div><Linkto={`/warehouses/${wh.warehouseId}`}className="text-pink-600hover:underlinefont-medium">{wh.name}</Link></div><divclassName="text-smtext-gray-700">{numberFormatter(wh.capacity)}</div><divclassName="text-smtext-gray-700">{numberFormatter(wh.occupiedCapacity)}</div><divclassName="text-smtext-gray-700">{wh.address}</div><divclassName="text-smtext-gray-700text-right">{numberFormatter(wh.employeesCount)}</div><divclassName="text-smtext-gray-700text-right">{numberFormatter(wh.productsCount)}</div><divclassName="text-smtext-gray-700text-right">{numberFormatter(wh.transactionsCount)}</div><divclassName="flexjustify-centerspace-x-4text-gray-600"><Linkto={`/warehouses/${wh.warehouseId}`}className="hover:text-pink-500transitionduration-200"><FaEye/></Link><Linkto={`/warehouses/${wh.warehouseId}/edit`}className="hover:text-pink-500transitionduration-200"><FaEdit/></Link><buttononClick={()=>handleDelete(wh.warehouseId)}className="hover:text-pink-500transitionduration-200cursor-pointer"><FaTrash/></button></div></div>))}</div></div><PaginationcurrentPage={page}totalPages={totalPages}onPageChange={setPage}/></>)}</>);};exportdefaultWarehouseList;// \features\auth\authSlice.jsximport{createSlice}from"@reduxjs/toolkit";constpersisted=localStorage.getItem("loggedIn")==="true";constauthSlice=createSlice({name:"auth",initialState:{loggedIn:persisted,error:null},reducers:{login:(state,action)=>{const{username,password}=action.payload;if(username==="admin"&&password==="admin"){state.loggedIn=true;state.error=null;localStorage.setItem("loggedIn","true");}else{state.loggedIn=false;state.error="Nieprawidłowanazwalubhasło";localStorage.removeItem("loggedIn");}},logout:(state)=>{state.loggedIn=false;state.error=null;localStorage.removeItem("loggedIn");},},});exportconst{login,logout}=authSlice.actions;exportdefaultauthSlice.reducer;// \features\categories\categoriesSlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import*ascategoriesAPIfrom"../../api/categories";exportconstfetchCategories=createAsyncThunk("categories/fetchAll",async(params)=>{constresponse=awaitcategoriesAPI.listCategories(params);returnresponse.data;});exportconstcreateCategory=createAsyncThunk("categories/create",async(data)=>{try{constresponse=awaitcategoriesAPI.createCategory(data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});exportconstupdateCategory=createAsyncThunk("categories/update",async({id,data})=>{try{constresponse=awaitcategoriesAPI.updateCategory(id,data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});exportconstdeleteCategory=createAsyncThunk("categories/delete",async(id)=>{try{awaitcategoriesAPI.deleteCategory(id);returnid;}catch(err){thrownewError(err.response?.data?.description||err.message);}});constcategoriesSlice=createSlice({name:"categories",initialState:{list:[],status:"idle",error:null,formStatus:"idle"},reducers:{},extraReducers:(builder)=>{builder.addCase(fetchCategories.pending,(state)=>{state.status="loading";state.formStatus="idle";state.list=[];state.error=null;}).addCase(fetchCategories.fulfilled,(state,action)=>{state.status="succeeded";state.list=action.payload;}).addCase(fetchCategories.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;}).addCase(createCategory.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(createCategory.fulfilled,(state,action)=>{state.formStatus="succeeded";state.list.push(action.payload);}).addCase(createCategory.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;}).addCase(updateCategory.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(updateCategory.fulfilled,(state,action)=>{state.formStatus="succeeded";constidx=state.list.findIndex((c)=>c.categoryId===action.payload.categoryId);if(idx!==-1)state.list[idx]=action.payload;}).addCase(updateCategory.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;}).addCase(deleteCategory.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(deleteCategory.fulfilled,(state,action)=>{state.formStatus="succeeded";state.list=state.list.filter((c)=>c.categoryId!==action.payload);}).addCase(deleteCategory.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;});},});exportdefaultcategoriesSlice.reducer;// \features\clients\clientsSlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import*asclientsAPIfrom"../../api/clients";import{create}from"lodash";exportconstfetchClients=createAsyncThunk("clients/fetchAll",async(params)=>{constresponse=awaitclientsAPI.listClients(params);returnresponse.data;});exportconstfetchClientById=createAsyncThunk("clients/fetchById",async(id)=>{constresponse=awaitclientsAPI.getClientById(id);returnresponse.data;});exportconstcreateClient=createAsyncThunk("clients/create",async(data)=>{try{constresponse=awaitclientsAPI.createClient(data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});constclientsSlice=createSlice({name:"clients",initialState:{list:{content:[]},current:null,status:"idle",error:null,formStatus:"idle",},reducers:{},extraReducers:(builder)=>{builder.addCase(fetchClients.pending,(state)=>{state.status="loading";state.formStatus="idle";state.list={content:[]};state.error=null;}).addCase(fetchClients.fulfilled,(state,action)=>{state.status="succeeded";state.list=action.payload;}).addCase(fetchClients.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;}).addCase(fetchClientById.pending,(state)=>{state.status="loading";state.current=null;state.error=null;}).addCase(fetchClientById.fulfilled,(state,action)=>{state.status="succeeded";state.current=action.payload;}).addCase(createClient.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(createClient.fulfilled,(state,action)=>{state.formStatus="succeeded";state.list.content.push(action.payload);}).addCase(createClient.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;});},});exportdefaultclientsSlice.reducer;// \features\dashboard\summarySlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import{getDashboardSummary}from"../../api/dashboard";exportconstfetchDashboardSummary=createAsyncThunk("dashboard/fetchSummary",async(warehouseId)=>{constresponse=awaitgetDashboardSummary(warehouseId);returnresponse.data;});constsummarySlice=createSlice({name:"dashboard",initialState:{data:null,status:"idle",error:null},reducers:{},extraReducers:(builder)=>{builder.addCase(fetchDashboardSummary.pending,(state)=>{state.status="loading";state.data=null;state.error=null;}).addCase(fetchDashboardSummary.fulfilled,(state,action)=>{state.status="succeeded";state.data=action.payload;}).addCase(fetchDashboardSummary.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;});},});exportdefaultsummarySlice.reducer;// \features\employees\employeesSlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import*asemployeesAPIfrom"../../api/employees";exportconstfetchEmployees=createAsyncThunk("employees/fetchAll",async(params)=>{constresponse=awaitemployeesAPI.listEmployees(params);returnresponse.data;});exportconstfetchEmployeeById=createAsyncThunk("employees/fetchById",async(id)=>{constresponse=awaitemployeesAPI.getEmployeeById(id);returnresponse.data;});exportconstcreateEmployee=createAsyncThunk("employees/create",async(data)=>{try{constresponse=awaitemployeesAPI.createEmployee(data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});constemployeesSlice=createSlice({name:"employees",initialState:{list:[],current:null,status:"idle",error:null,formStatus:"idle",},reducers:{},extraReducers:(builder)=>{builder.addCase(fetchEmployees.pending,(state)=>{state.status="loading";state.formStatus="idle";state.list=[];state.error=null;}).addCase(fetchEmployees.fulfilled,(state,action)=>{state.status="succeeded";state.list=action.payload;}).addCase(fetchEmployees.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;}).addCase(fetchEmployeeById.pending,(state)=>{state.status="loading";state.current=null;state.error=null;}).addCase(fetchEmployeeById.fulfilled,(state,action)=>{state.status="succeeded";state.current=action.payload;}).addCase(createEmployee.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(createEmployee.fulfilled,(state,action)=>{state.formStatus="succeeded";state.list.content.push(action.payload);}).addCase(createEmployee.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;});},});exportdefaultemployeesSlice.reducer;// \features\geography\geographySlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import*asgeographyAPIfrom"../../api/geography";exportconstfetchRegions=createAsyncThunk("geography/fetchRegions",async()=>{constresponse=awaitgeographyAPI.listRegions();returnresponse.data;});exportconstfetchCountries=createAsyncThunk("geography/fetchCountries",async(regionId)=>{constresponse=awaitgeographyAPI.listCountries(regionId);returnresponse.data;});exportconstcreateAddress=createAsyncThunk("geography/createAddress",async(data)=>{try{constresponse=awaitgeographyAPI.createAddress(data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});constgeographySlice=createSlice({name:"geography",initialState:{regions:[],countries:[],status:"idle",error:null,},reducers:{},extraReducers:(builder)=>{builder.addCase(fetchRegions.pending,(state)=>{state.status="loading";state.regions=[];state.error=null;}).addCase(fetchRegions.fulfilled,(state,action)=>{state.status="succeeded";state.regions=action.payload;}).addCase(fetchRegions.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;}).addCase(fetchCountries.pending,(state)=>{state.status="loading";state.countries=[];state.error=null;}).addCase(fetchCountries.fulfilled,(state,action)=>{state.status="succeeded";state.countries=action.payload;}).addCase(fetchCountries.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;}).addCase(createAddress.fulfilled,(state,action)=>{state.list.push(action.payload);});},});exportdefaultgeographySlice.reducer;// \features\inventory\deliverySlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import{deliverToClient}from"../../api/inventory";exportconstdeliverInventory=createAsyncThunk("inventory/deliver",async(data)=>{try{constresponse=awaitdeliverToClient(data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});constdeliverySlice=createSlice({name:"inventoryDelivery",initialState:{status:"idle",error:null,transaction:null},reducers:{},extraReducers:(builder)=>{builder.addCase(deliverInventory.pending,(state)=>{state.status="loading";}).addCase(deliverInventory.fulfilled,(state,action)=>{state.status="succeeded";state.transaction=action.payload;}).addCase(deliverInventory.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;});},});exportdefaultdeliverySlice.reducer;// \features\inventory\receiveSlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import{receiveFromSupplier}from"../../api/inventory";exportconstreceiveInventory=createAsyncThunk("inventory/receive",async(data)=>{try{constresponse=awaitreceiveFromSupplier(data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});constreceiveSlice=createSlice({name:"inventoryReceive",initialState:{status:"idle",error:null,transaction:null},reducers:{},extraReducers:(builder)=>{builder.addCase(receiveInventory.pending,(state)=>{state.status="loading";}).addCase(receiveInventory.fulfilled,(state,action)=>{state.status="succeeded";state.transaction=action.payload;}).addCase(receiveInventory.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;});},});exportdefaultreceiveSlice.reducer;// \features\inventory\transferSlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import{transferBetweenWarehouses}from"../../api/inventory";exportconsttransferInventory=createAsyncThunk("inventory/transfer",async(data)=>{try{constresponse=awaittransferBetweenWarehouses(data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});consttransferSlice=createSlice({name:"inventoryTransfer",initialState:{status:"idle",error:null,transaction:null},reducers:{},extraReducers:(builder)=>{builder.addCase(transferInventory.pending,(state)=>{state.status="loading";}).addCase(transferInventory.fulfilled,(state,action)=>{state.status="succeeded";state.transaction=action.payload;}).addCase(transferInventory.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;});},});exportdefaulttransferSlice.reducer;// \features\products\productsSlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import*asproductsAPIfrom"../../api/products";exportconstfetchProducts=createAsyncThunk("products/fetchAll",async(params)=>{constresponse=awaitproductsAPI.searchProducts(params);returnresponse.data;});exportconstfetchProductById=createAsyncThunk("products/fetchById",async(id)=>{constresponse=awaitproductsAPI.getProductById(id);returnresponse.data;});exportconstcreateProduct=createAsyncThunk("products/create",async(data)=>{try{constresponse=awaitproductsAPI.createProduct(data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});exportconstupdateProduct=createAsyncThunk("products/update",async({id,data})=>{try{constresponse=awaitproductsAPI.updateProduct(id,data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});exportconstdeleteProduct=createAsyncThunk("products/delete",async(id)=>{try{awaitproductsAPI.deleteProduct(id);returnid;}catch(err){thrownewError(err.response?.data?.description||err.message);}});constproductsSlice=createSlice({name:"products",initialState:{list:[],current:null,status:"idle",error:null,formStatus:"idle",},reducers:{},extraReducers:(builder)=>{builder.addCase(fetchProducts.pending,(state)=>{state.status="loading";state.formStatus="idle";state.list=[];state.error=null;}).addCase(fetchProducts.fulfilled,(state,action)=>{state.status="succeeded";state.list=action.payload;}).addCase(fetchProducts.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;}).addCase(fetchProductById.pending,(state)=>{state.status="loading";state.current=null;state.error=null;}).addCase(fetchProductById.fulfilled,(state,action)=>{state.status="succeeded";state.current=action.payload;}).addCase(createProduct.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(createProduct.fulfilled,(state,action)=>{state.formStatus="succeeded";state.list.push(action.payload);}).addCase(createProduct.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;}).addCase(updateProduct.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(updateProduct.fulfilled,(state,action)=>{state.formStatus="succeeded";constidx=state.list.findIndex((p)=>p.productId===action.payload.productId);if(idx!==-1)state.list[idx]=action.payload;}).addCase(updateProduct.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;}).addCase(deleteProduct.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(deleteProduct.fulfilled,(state,action)=>{state.formStatus="succeeded";state.list=state.list.filter((p)=>p.productId!==action.payload);}).addCase(deleteProduct.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;});},});exportdefaultproductsSlice.reducer;// \features\selectedWarehouse\selectedWarehouseSlice.jsximport{createSlice}from"@reduxjs/toolkit";constselectedWarehouseSlice=createSlice({name:"selectedWarehouse",initialState:null,reducers:{setSelectedWarehouse:(_,action)=>action.payload,},});exportconst{setSelectedWarehouse}=selectedWarehouseSlice.actions;exportdefaultselectedWarehouseSlice.reducer;// \features\suppliers\suppliersSlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import*assuppliersAPIfrom"../../api/suppliers";exportconstfetchSuppliers=createAsyncThunk("suppliers/fetchAll",async(params)=>{constresponse=awaitsuppliersAPI.listSuppliers(params);returnresponse.data;});exportconstfetchSupplierById=createAsyncThunk("suppliers/fetchById",async(id)=>{constresponse=awaitsuppliersAPI.getSupplierById(id);returnresponse.data;});exportconstcreateSupplier=createAsyncThunk("suppliers/create",async(data)=>{try{constresponse=awaitsuppliersAPI.createSupplier(data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});constsuppliersSlice=createSlice({name:"suppliers",initialState:{list:{content:[]},current:null,status:"idle",error:null,formStatus:"idle",},reducers:{},extraReducers:(builder)=>{builder.addCase(fetchSuppliers.pending,(state)=>{state.status="loading";state.formStatus="idle";state.list={content:[]};state.error=null;}).addCase(fetchSuppliers.fulfilled,(state,action)=>{state.status="succeeded";state.list=action.payload;}).addCase(fetchSuppliers.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;}).addCase(fetchSupplierById.pending,(state)=>{state.status="loading";state.current=null;state.error=null;}).addCase(fetchSupplierById.fulfilled,(state,action)=>{state.status="succeeded";state.current=action.payload;}).addCase(createSupplier.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(createSupplier.fulfilled,(state,action)=>{state.formStatus="succeeded";state.list.content.push(action.payload);}).addCase(createSupplier.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;});},});exportdefaultsuppliersSlice.reducer;// \features\transactions\transactionsSlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import*astransactionsAPIfrom"../../api/transactions";exportconstfetchTransactions=createAsyncThunk("transactions/fetchAll",async(params)=>{constresponse=awaittransactionsAPI.listTransactions(params);returnresponse.data;});exportconstfetchTransactionById=createAsyncThunk("transactions/fetchById",async(id)=>{constresponse=awaittransactionsAPI.getTransactionById(id);returnresponse.data;});consttransactionsSlice=createSlice({name:"transactions",initialState:{list:{content:[]},current:null,status:"idle",error:null,},reducers:{},extraReducers:(builder)=>{builder.addCase(fetchTransactions.pending,(state)=>{state.status="loading";state.list={content:[]};state.error=null;}).addCase(fetchTransactions.fulfilled,(state,action)=>{state.status="succeeded";state.list=action.payload;}).addCase(fetchTransactions.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;}).addCase(fetchTransactionById.pending,(state)=>{state.status="loading";state.current=null;state.error=null;}).addCase(fetchTransactionById.fulfilled,(state,action)=>{state.status="succeeded";state.current=action.payload;});},});exportdefaulttransactionsSlice.reducer;// \features\warehouses\warehousesSlice.jsximport{createSlice,createAsyncThunk}from"@reduxjs/toolkit";import*aswarehousesAPIfrom"../../api/warehouses";exportconstfetchWarehouses=createAsyncThunk("warehouses/fetchAll",async(params)=>{constresponse=awaitwarehousesAPI.listWarehouses(params);returnresponse.data;});exportconstfetchWarehouseById=createAsyncThunk("warehouses/fetchById",async(id)=>{constresponse=awaitwarehousesAPI.getWarehouseById(id);returnresponse.data;});exportconstcreateWarehouse=createAsyncThunk("warehouses/create",async(data)=>{try{constresponse=awaitwarehousesAPI.createWarehouse(data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});exportconstupdateWarehouse=createAsyncThunk("warehouses/update",async({id,data})=>{try{constresponse=awaitwarehousesAPI.updateWarehouse(id,data);returnresponse.data;}catch(err){thrownewError(err.response?.data?.description||err.message);}});exportconstdeleteWarehouse=createAsyncThunk("warehouses/delete",async(id)=>{try{awaitwarehousesAPI.deleteWarehouse(id);returnid;}catch(err){thrownewError(err.response?.data?.description||err.message);}});constwarehousesSlice=createSlice({name:"warehouses",initialState:{list:[],current:null,status:"idle",error:null,formStatus:"idle",},reducers:{},extraReducers:(builder)=>{builder.addCase(fetchWarehouses.pending,(state)=>{state.status="loading";state.formStatus="idle";state.list=[];state.error=null;}).addCase(fetchWarehouses.fulfilled,(state,action)=>{state.status="succeeded";state.list=action.payload;}).addCase(fetchWarehouses.rejected,(state,action)=>{state.status="failed";state.error=action.error.message;}).addCase(fetchWarehouseById.pending,(state)=>{state.status="loading";state.current=null;state.error=null;}).addCase(fetchWarehouseById.fulfilled,(state,action)=>{state.status="succeeded";state.current=action.payload;}).addCase(createWarehouse.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(createWarehouse.fulfilled,(state,action)=>{state.formStatus="succeeded";state.list.push(action.payload);}).addCase(createWarehouse.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;}).addCase(updateWarehouse.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(updateWarehouse.fulfilled,(state,action)=>{state.formStatus="succeeded";constidx=state.list.findIndex((w)=>w.warehouseId===action.payload.warehouseId);if(idx!==-1)state.list[idx]=action.payload;}).addCase(updateWarehouse.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;}).addCase(deleteWarehouse.pending,(state)=>{state.formStatus="loading";state.error=null;}).addCase(deleteWarehouse.fulfilled,(state,action)=>{state.formStatus="succeeded";state.list=state.list.filter((w)=>w.warehouseId!==action.payload);}).addCase(deleteWarehouse.rejected,(state,action)=>{state.formStatus="failed";state.error=action.error.message;});},});exportdefaultwarehousesSlice.reducer;// \hooks\useDebounce.jsximport{useState,useEffect}from"react";constuseDebounce=(value,delay=500)=>{const[debounced,setDebounced]=useState(value);useEffect(()=>{consthandler=setTimeout(()=>{setDebounced(value);},delay);return()=>clearTimeout(handler);},[value,delay]);returndebounced;};exportdefaultuseDebounce;// \pages\CategoriesPage.jsximport{Link}from"react-router-dom";import{FaPlus,FaTags}from"react-icons/fa";importCategoryListfrom"../components/categories/CategoryList";constCategoriesPage=()=>{return(<divclassName="space-y-6"><divclassName="flexjustify-betweenitems-center"><divclassName="flexitems-centerspace-x-2"><FaTagsclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Listakategorii</h1></div><Linkto="/categories/new"className="flexitems-centerbg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransition"><FaPlusclassName="mr-2"/>NowaKategoria</Link></div><CategoryList/></div>);};exportdefaultCategoriesPage;// \pages\ClientsPage.jsximport{Link}from"react-router-dom";import{FaPlus,FaUsers}from"react-icons/fa";importClientListfrom"../components/clients/ClientList";constClientsPage=()=>{return(<divclassName="space-y-6"><divclassName="flexjustify-betweenitems-center"><divclassName="flexitems-centerspace-x-2"><FaUsersclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Listaklientów</h1></div><Linkto="/clients/new"className="flexitems-centerbg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransition"><FaPlusclassName="mr-2"/>NowyKlient</Link></div><ClientList/></div>);};exportdefaultClientsPage;// \pages\DashboardPage.jsximport{useEffect}from"react";import{useDispatch,useSelector}from"react-redux";import{fetchDashboardSummary}from"../features/dashboard/summarySlice";importSummaryTilesfrom"../components/Dashboard/SummaryTiles";importChartsfrom"../components/Dashboard/Charts";importSpinnerfrom"../components/helper/Spinner";constDashboardPage=()=>{constdispatch=useDispatch();constselectedWarehouse=useSelector((s)=>s.selectedWarehouse);const{data:summary,status,error}=useSelector((s)=>s.dashboard);useEffect(()=>{dispatch(fetchDashboardSummary(selectedWarehouse));},[dispatch,selectedWarehouse]);if(status==="loading"||status==="idle")return<Spinner/>;if(status==="failed")return<pclassName="text-red-500">{error}</p>;if(!summary)return<pclassName="text-red-500">Brakdanychdowyświetlenia.</p>;return(<divclassName="space-y-6"><SummaryTilessummary={summary}/><Chartssummary={summary}/></div>);};exportdefaultDashboardPage;// \pages\EmployeesPage.jsximport{Link}from"react-router-dom";import{FaPlus,FaUserFriends}from"react-icons/fa";importEmployeeListfrom"../components/employees/EmployeeList";constEmployeesPage=()=>{return(<divclassName="space-y-6"><divclassName="flexjustify-betweenitems-center"><divclassName="flexitems-centerspace-x-2"><FaUserFriendsclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Listapracowników</h1></div><Linkto="/employees/new"className="flexitems-centerbg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransition"><FaPlusclassName="mr-2"/>Nowypracownik</Link></div><EmployeeList/></div>);};exportdefaultEmployeesPage;// \pages\GeographyPage.jsximport{useState}from"react";import{FaGlobe}from"react-icons/fa";importRegionListfrom"../components/geography/RegionList";importCountryListfrom"../components/geography/CountryList";constGeographyPage=()=>{const[selectedRegion,setSelectedRegion]=useState({});return(<divclassName="space-y-6"><divclassName="flexitems-centerspace-x-2"><FaGlobeclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Listaregionówikrajów</h1></div><divclassName="gridgrid-cols-1md:grid-cols-2gap-6"><RegionListselectedRegion={selectedRegion}onSelect={setSelectedRegion}/><CountryListregionId={selectedRegion.id}regionName={selectedRegion.name}/></div></div>);};exportdefaultGeographyPage;// \pages\LoginPage.jsximport{useState,useEffect}from"react";import{useDispatch,useSelector}from"react-redux";import{useNavigate}from"react-router-dom";import{login}from"../features/auth/authSlice";importLogofrom"../assets/images/logo.png";constLoginPage=()=>{const[username,setUsername]=useState("");const[password,setPassword]=useState("");const{loggedIn,error}=useSelector((state)=>state.auth);constdispatch=useDispatch();constnavigate=useNavigate();consthandleSubmit=(e)=>{e.preventDefault();dispatch(login({username,password}));};useEffect(()=>{if(loggedIn){navigate("/");}},[loggedIn,navigate]);return(<divclassName="min-h-screenflexitems-centerjustify-centerbg-gray-100"><divclassName="bg-whitew-fullmax-w-mdp-8rounded-2xlshadow-xl"><divclassName="flexjustify-centermb-6"><imgsrc={Logo}alt="Logo"className="h-12"/></div><h2className="text-2xlfont-semiboldtext-gray-800text-centermb-8">WelcomeBack</h2><formclassName="space-y-6"onSubmit={(e)=>handleSubmit(e)}><div><labelhtmlFor="username"className="blocktext-smfont-mediumtext-gray-700mb-1">Login</label><inputtype="text"id="username"name="username"className="w-fullpx-4py-2borderborder-gray-300rounded-lgfocus:outline-nonefocus:ring-2focus:ring-pink-500transition"placeholder="Login"onChange={(e)=>setUsername(e.target.value)}/></div><div><labelhtmlFor="password"className="blocktext-smfont-mediumtext-gray-700mb-1">Password</label><inputtype="password"id="password"name="password"className="w-fullpx-4py-2borderborder-gray-300rounded-lgfocus:outline-nonefocus:ring-2focus:ring-pink-500transition"placeholder="Password"onChange={(e)=>setPassword(e.target.value)}/></div>{error&&<pstyle={{color:"red"}}>{error}</p>}<buttontype="submit"className="w-fullpy-3bg-gradient-to-rfrom-pink-500to-pink-400text-whitefont-mediumrounded-lgshadow-mdhover:from-pink-600hover:to-pink-500transitionduration-300">Login</button></form></div></div>);};exportdefaultLoginPage;// \pages\ProductsPage.jsximport{Link}from"react-router-dom";import{FaPlus,FaBoxOpen}from"react-icons/fa";importProductListfrom"../components/products/ProductList";constProductsPage=()=>{return(<divclassName="space-y-6"><divclassName="flexjustify-betweenitems-center"><divclassName="flexitems-centerspace-x-2"><FaBoxOpenclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Listaproduktów</h1></div><Linkto="/products/new"className="flexitems-centerbg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransition"><FaPlusclassName="mr-2"/>NowyProdukt</Link></div><ProductList/></div>);};exportdefaultProductsPage;// \pages\SuppliersPage.jsximport{Link}from"react-router-dom";import{FaPlus,FaUserTie}from"react-icons/fa";importSupplierListfrom"../components/suppliers/SupplierList";constSuppliersPage=()=>{return(<divclassName="space-y-6"><divclassName="flexjustify-betweenitems-center"><divclassName="flexitems-centerspace-x-2"><FaUserTieclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Listadostawców</h1></div><Linkto="/suppliers/new"className="flexitems-centerbg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransition"><FaPlusclassName="mr-2"/>NowyDostawca</Link></div><SupplierList/></div>);};exportdefaultSuppliersPage;// \pages\TransactionsPage.jsximport{FaClipboardList}from"react-icons/fa";importTransactionListfrom"../components/transactions/TransactionList";constTransactionsPage=()=>{return(<divclassName="space-y-6"><divclassName="flexjustify-betweenitems-center"><divclassName="flexitems-centerspace-x-2"><FaClipboardListclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Listatransakcji</h1></div></div><TransactionList/></div>);};exportdefaultTransactionsPage;// \pages\WarehousesPage.jsximport{Link}from"react-router-dom";import{FaPlus,FaWarehouse}from"react-icons/fa";importWarehouseListfrom"../components/warehouses/WarehouseList";constWarehousesPage=()=>{return(<divclassName="space-y-6"><divclassName="flexjustify-betweenitems-center"><divclassName="flexitems-centerspace-x-2"><FaWarehouseclassName="text-pink-500w-6h-6"/><h1className="text-2xlfont-semiboldtext-gray-800">Listamagazynów</h1></div><Linkto="/warehouses/new"className="flexitems-centerbg-pink-500hover:bg-pink-600text-whitepx-4py-2rounded-lgtransition"><FaPlusclassName="mr-2"/>NowyMagazyn</Link></div><WarehouseList/></div>);};exportdefaultWarehousesPage;// \routes\AppRouter.jsximport{BrowserRouterasRouter,Routes,Route}from"react-router-dom";importLoginPagefrom"../pages/LoginPage";importDashboardPagefrom"../pages/DashboardPage";importProductsPagefrom"../pages/ProductsPage";importCategoriesPagefrom"../pages/CategoriesPage";importWarehousesPagefrom"../pages/WarehousesPage";importTransactionsPagefrom"../pages/TransactionsPage";importClientsPagefrom"../pages/ClientsPage";importSuppliersPagefrom"../pages/SuppliersPage";importEmployeesPagefrom"../pages/EmployeesPage";importGeographyPagefrom"../pages/GeographyPage";importProtectedRoutefrom"../components/Layout/ProtectedRoute";importLayoutfrom"../components/Layout/Layout";importDefaultRedirectfrom"../components/Layout/DefaultRedirect";importCategoryFormfrom"../components/categories/CategoryForm";importCategoryDetailfrom"../components/categories/CategoryDetail";importClientFormfrom"../components/clients/ClientForm";importClientDetailfrom"../components/clients/ClientDetail";importEmployeeFormfrom"../components/employees/EmployeeForm";importEmployeeDetailfrom"../components/employees/EmployeeDetail";importDeliveryPagefrom"../components/inventory/DeliveryPage";importReceivePagefrom"../components/inventory/ReceivePage";importTransferPagefrom"../components/inventory/TransferPage";importProductFormfrom"../components/products/ProductForm";importProductDetailfrom"../components/products/ProductDetail";importSupplierDetailfrom"../components/suppliers/SupplierDetail";importSupplierFormfrom"../components/suppliers/SupplierForm";importTransactionDetailfrom"../components/transactions/TransactionDetail";importWarehouseDetailfrom"../components/warehouses/WarehouseDetail";importWarehouseFormfrom"../components/warehouses/WarehouseForm";constAppRouter=()=>(<Router><Routes><Routepath="/login"element={<LoginPage/>}/><Routepath="/*"element={<ProtectedRoute><Layout><Routes><Routeindexelement={<DashboardPage/>}/><Routepath="products"element={<ProductsPage/>}/><Routepath="products/new"element={<ProductForm/>}/><Routepath="products/:id/edit"element={<ProductForm/>}/><Routepath="products/:id"element={<ProductDetail/>}/><Routepath="categories"element={<CategoriesPage/>}/><Routepath="categories/new"element={<CategoryForm/>}/><Routepath="categories/:id"element={<CategoryDetail/>}/><Routepath="categories/:id/edit"element={<CategoryForm/>}/><Routepath="warehouses"element={<WarehousesPage/>}/><Routepath="warehouses/new"element={<WarehouseForm/>}/><Routepath="warehouses/:id/edit"element={<WarehouseForm/>}/><Routepath="warehouses/:id"element={<WarehouseDetail/>}/><Routepath="inventory/receive"element={<ReceivePage/>}/><Routepath="inventory/transfer"element={<TransferPage/>}/><Routepath="inventory/delivery"element={<DeliveryPage/>}/><Routepath="transactions"element={<TransactionsPage/>}/><Routepath="transactions/:id"element={<TransactionDetail/>}/><Routepath="clients"element={<ClientsPage/>}/><Routepath="clients/new"element={<ClientForm/>}/><Routepath="clients/:id"element={<ClientDetail/>}/><Routepath="suppliers"element={<SuppliersPage/>}/><Routepath="suppliers/new"element={<SupplierForm/>}/><Routepath="suppliers/:id"element={<SupplierDetail/>}/><Routepath="employees"element={<EmployeesPage/>}/><Routepath="employees/new"element={<EmployeeForm/>}/><Routepath="employees/:id"element={<EmployeeDetail/>}/><Routepath="geography"element={<GeographyPage/>}/><Routepath="*"element={<DefaultRedirect/>}/></Routes></Layout></ProtectedRoute>}/></Routes></Router>);exportdefaultAppRouter;// \utils\apiClient.jsximportaxiosfrom"axios";constapiClient=axios.create({baseURL:import.meta.env.VITE_API_URL,});exportdefaultapiClient;// \utils\helpers.jsxexportconstcurrencyFormatter=(price)=>newIntl.NumberFormat("pl-PL",{style:"currency",currency:"USD",currencyDisplay:"narrowSymbol",minimumFractionDigits:2,maximumFractionDigits:2,}).format(price);exportconstnumberFormatter=(number)=>newIntl.NumberFormat("pl-PL",{minimumFractionDigits:0,maximumFractionDigits:2,}).format(number);exportconstdateFormatter=(date)=>{returnnewIntl.DateTimeFormat("pl-PL",{year:"numeric",month:"short",day:"2-digit",}).format(newDate(date));};